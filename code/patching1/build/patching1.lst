ARM GAS  C:\Users\matth\AppData\Local\Temp\ccJdUjkk.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 2
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"patching1.cpp"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text._ZN16ShiftRegister595D2Ev,"axG",%progbits,_ZN16ShiftRegister595D5Ev,comdat
  17              		.align	1
  18              		.p2align 2,,3
  19              		.weak	_ZN16ShiftRegister595D2Ev
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv5-d16
  26              	_ZN16ShiftRegister595D2Ev:
  27              	.LVL0:
  28              	.LFB1833:
  29              		.file 1 "../DaisyExamples/libDaisy//src/dev/sr_595.h"
   1:../DaisyExamples/libDaisy//src/dev/sr_595.h **** #pragma once
   2:../DaisyExamples/libDaisy//src/dev/sr_595.h **** #ifndef DSY_DEV_SR_595_H
   3:../DaisyExamples/libDaisy//src/dev/sr_595.h **** #define DSY_DEV_SR_595_H
   4:../DaisyExamples/libDaisy//src/dev/sr_595.h **** 
   5:../DaisyExamples/libDaisy//src/dev/sr_595.h **** #include "daisy_core.h"
   6:../DaisyExamples/libDaisy//src/dev/sr_595.h **** #include "per/gpio.h"
   7:../DaisyExamples/libDaisy//src/dev/sr_595.h **** 
   8:../DaisyExamples/libDaisy//src/dev/sr_595.h **** const size_t kMaxSr595DaisyChain
   9:../DaisyExamples/libDaisy//src/dev/sr_595.h ****     = 16; /**< Maximum Number of chained devices Connect device's QH' pin to the next chips serial 
  10:../DaisyExamples/libDaisy//src/dev/sr_595.h **** 
  11:../DaisyExamples/libDaisy//src/dev/sr_595.h **** /** @addtogroup shiftregister
  12:../DaisyExamples/libDaisy//src/dev/sr_595.h ****     @{
  13:../DaisyExamples/libDaisy//src/dev/sr_595.h ****     */
  14:../DaisyExamples/libDaisy//src/dev/sr_595.h **** 
  15:../DaisyExamples/libDaisy//src/dev/sr_595.h **** /**
  16:../DaisyExamples/libDaisy//src/dev/sr_595.h ****    @brief Device Driver for 8-bit shift register. \n 
  17:../DaisyExamples/libDaisy//src/dev/sr_595.h ****    CD74HC595 - 8-bit serial to parallel output shift
  18:../DaisyExamples/libDaisy//src/dev/sr_595.h ****    @author shensley
  19:../DaisyExamples/libDaisy//src/dev/sr_595.h ****    @date May 2020
  20:../DaisyExamples/libDaisy//src/dev/sr_595.h **** */
  21:../DaisyExamples/libDaisy//src/dev/sr_595.h **** class ShiftRegister595
  22:../DaisyExamples/libDaisy//src/dev/sr_595.h **** {
  23:../DaisyExamples/libDaisy//src/dev/sr_595.h ****   public:
  24:../DaisyExamples/libDaisy//src/dev/sr_595.h ****     /** The following pins correspond to the hardware connections
  25:../DaisyExamples/libDaisy//src/dev/sr_595.h ****     to the 595. 
  26:../DaisyExamples/libDaisy//src/dev/sr_595.h ****   */
  27:../DaisyExamples/libDaisy//src/dev/sr_595.h ****     enum Pins
  28:../DaisyExamples/libDaisy//src/dev/sr_595.h ****     {
  29:../DaisyExamples/libDaisy//src/dev/sr_595.h ****         PIN_LATCH, /** LATCH corresonds to Pin 12 "RCLK" */
ARM GAS  C:\Users\matth\AppData\Local\Temp\ccJdUjkk.s 			page 2


  30:../DaisyExamples/libDaisy//src/dev/sr_595.h ****         PIN_CLK,   /** CLK corresponds to Pin 11 "SRCLK" */
  31:../DaisyExamples/libDaisy//src/dev/sr_595.h ****         PIN_DATA,  /** DATA corresponds to Pin 14 "SER" */
  32:../DaisyExamples/libDaisy//src/dev/sr_595.h ****         NUM_PINS, /** _SRCLR_ is not added here, but is tied to 3v3 on test hardware. */
  33:../DaisyExamples/libDaisy//src/dev/sr_595.h ****     };
  34:../DaisyExamples/libDaisy//src/dev/sr_595.h ****     ShiftRegister595() {}
  35:../DaisyExamples/libDaisy//src/dev/sr_595.h ****     ~ShiftRegister595() {}
  30              		.loc 1 35 5 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
  35              		.loc 1 35 26 is_stmt 0 view .LVU1
  36 0000 7047     		bx	lr
  37              		.cfi_endproc
  38              	.LFE1833:
  40              		.weak	_ZN16ShiftRegister595D1Ev
  41              		.thumb_set _ZN16ShiftRegister595D1Ev,_ZN16ShiftRegister595D2Ev
  42 0002 00BF     		.section	.text._ZN5daisy9DaisySeedD2Ev,"axG",%progbits,_ZN5daisy9DaisySeedD5Ev,comdat
  43              		.align	1
  44              		.p2align 2,,3
  45              		.weak	_ZN5daisy9DaisySeedD2Ev
  46              		.syntax unified
  47              		.thumb
  48              		.thumb_func
  49              		.fpu fpv5-d16
  51              	_ZN5daisy9DaisySeedD2Ev:
  52              	.LVL1:
  53              	.LFB2528:
  54              		.file 2 "../DaisyExamples/libDaisy//src/daisy_seed.h"
   1:../DaisyExamples/libDaisy//src/daisy_seed.h **** #pragma once
   2:../DaisyExamples/libDaisy//src/daisy_seed.h **** #ifndef DSY_SEED_H
   3:../DaisyExamples/libDaisy//src/daisy_seed.h **** #define DSY_SEED_H
   4:../DaisyExamples/libDaisy//src/daisy_seed.h **** 
   5:../DaisyExamples/libDaisy//src/daisy_seed.h **** #include "daisy.h"
   6:../DaisyExamples/libDaisy//src/daisy_seed.h **** 
   7:../DaisyExamples/libDaisy//src/daisy_seed.h **** //Uncomment this out if you're still using the rev2 hardware
   8:../DaisyExamples/libDaisy//src/daisy_seed.h **** //#define SEED_REV2
   9:../DaisyExamples/libDaisy//src/daisy_seed.h **** 
  10:../DaisyExamples/libDaisy//src/daisy_seed.h **** namespace daisy
  11:../DaisyExamples/libDaisy//src/daisy_seed.h **** {
  12:../DaisyExamples/libDaisy//src/daisy_seed.h **** /**
  13:../DaisyExamples/libDaisy//src/daisy_seed.h ****    @brief This is the higher-level interface for the Daisy board. \n 
  14:../DaisyExamples/libDaisy//src/daisy_seed.h ****     All basic peripheral configuration/initialization is setup here. \n
  15:../DaisyExamples/libDaisy//src/daisy_seed.h **** 
  16:../DaisyExamples/libDaisy//src/daisy_seed.h ****    @ingroup boards
  17:../DaisyExamples/libDaisy//src/daisy_seed.h **** */
  18:../DaisyExamples/libDaisy//src/daisy_seed.h **** class DaisySeed
  19:../DaisyExamples/libDaisy//src/daisy_seed.h **** {
  20:../DaisyExamples/libDaisy//src/daisy_seed.h ****   public:
  21:../DaisyExamples/libDaisy//src/daisy_seed.h ****     DaisySeed() {}
  22:../DaisyExamples/libDaisy//src/daisy_seed.h ****     ~DaisySeed() {}
  55              		.loc 2 22 5 is_stmt 1 view -0
  56              		.cfi_startproc
  57              		@ args = 0, pretend = 0, frame = 0
  58              		@ frame_needed = 0, uses_anonymous_args = 0
  59              		@ link register save eliminated.
  60              	.LBB91:
ARM GAS  C:\Users\matth\AppData\Local\Temp\ccJdUjkk.s 			page 3


  61              	.LBI91:
  62              		.file 3 "../DaisyExamples/libDaisy//src/sys/system.h"
   1:../DaisyExamples/libDaisy//src/sys/system.h **** #ifndef DSY_SYSTEM_H
   2:../DaisyExamples/libDaisy//src/sys/system.h **** #define DSY_SYSTEM_H
   3:../DaisyExamples/libDaisy//src/sys/system.h **** 
   4:../DaisyExamples/libDaisy//src/sys/system.h **** #ifndef UNIT_TEST // for unit tests, a dummy implementation is provided below
   5:../DaisyExamples/libDaisy//src/sys/system.h **** 
   6:../DaisyExamples/libDaisy//src/sys/system.h **** #include <cstdint>
   7:../DaisyExamples/libDaisy//src/sys/system.h **** #include "per/tim.h"
   8:../DaisyExamples/libDaisy//src/sys/system.h **** 
   9:../DaisyExamples/libDaisy//src/sys/system.h **** namespace daisy
  10:../DaisyExamples/libDaisy//src/sys/system.h **** {
  11:../DaisyExamples/libDaisy//src/sys/system.h **** /** A handle for interacting with the Core System. 
  12:../DaisyExamples/libDaisy//src/sys/system.h ****  ** This includes the Clock tree, MPU, global DMA initialization,
  13:../DaisyExamples/libDaisy//src/sys/system.h ****  ** cache handling, and any other necessary global initiailzation
  14:../DaisyExamples/libDaisy//src/sys/system.h ****  **
  15:../DaisyExamples/libDaisy//src/sys/system.h ****  ** @author shensley
  16:../DaisyExamples/libDaisy//src/sys/system.h ****  ** @ingroup system
  17:../DaisyExamples/libDaisy//src/sys/system.h ****  */
  18:../DaisyExamples/libDaisy//src/sys/system.h **** class System
  19:../DaisyExamples/libDaisy//src/sys/system.h **** {
  20:../DaisyExamples/libDaisy//src/sys/system.h ****   public:
  21:../DaisyExamples/libDaisy//src/sys/system.h ****     /** Contains settings for initializing the System */
  22:../DaisyExamples/libDaisy//src/sys/system.h ****     struct Config
  23:../DaisyExamples/libDaisy//src/sys/system.h ****     {
  24:../DaisyExamples/libDaisy//src/sys/system.h ****         /** Specifies the system clock frequency that feeds APB/AHB clocks, etc. */
  25:../DaisyExamples/libDaisy//src/sys/system.h ****         enum class SysClkFreq
  26:../DaisyExamples/libDaisy//src/sys/system.h ****         {
  27:../DaisyExamples/libDaisy//src/sys/system.h ****             FREQ_400MHZ,
  28:../DaisyExamples/libDaisy//src/sys/system.h ****             FREQ_480MHZ,
  29:../DaisyExamples/libDaisy//src/sys/system.h ****         };
  30:../DaisyExamples/libDaisy//src/sys/system.h **** 
  31:../DaisyExamples/libDaisy//src/sys/system.h ****         /** Method to call on the struct to set to defaults
  32:../DaisyExamples/libDaisy//src/sys/system.h ****          ** CPU Freq set to 400MHz
  33:../DaisyExamples/libDaisy//src/sys/system.h ****          ** Cache Enabled 
  34:../DaisyExamples/libDaisy//src/sys/system.h ****          ** */
  35:../DaisyExamples/libDaisy//src/sys/system.h ****         void Defaults()
  36:../DaisyExamples/libDaisy//src/sys/system.h ****         {
  37:../DaisyExamples/libDaisy//src/sys/system.h ****             cpu_freq    = SysClkFreq::FREQ_400MHZ;
  38:../DaisyExamples/libDaisy//src/sys/system.h ****             use_dcache  = true;
  39:../DaisyExamples/libDaisy//src/sys/system.h ****             use_icache  = true;
  40:../DaisyExamples/libDaisy//src/sys/system.h ****             skip_clocks = false;
  41:../DaisyExamples/libDaisy//src/sys/system.h ****         }
  42:../DaisyExamples/libDaisy//src/sys/system.h **** 
  43:../DaisyExamples/libDaisy//src/sys/system.h ****         /** Method to call on the struct to set to boost mode:
  44:../DaisyExamples/libDaisy//src/sys/system.h ****          ** CPU Freq set to 480MHz
  45:../DaisyExamples/libDaisy//src/sys/system.h ****          ** Cache Enabled 
  46:../DaisyExamples/libDaisy//src/sys/system.h ****          ** */
  47:../DaisyExamples/libDaisy//src/sys/system.h ****         void Boost()
  48:../DaisyExamples/libDaisy//src/sys/system.h ****         {
  49:../DaisyExamples/libDaisy//src/sys/system.h ****             cpu_freq    = SysClkFreq::FREQ_480MHZ;
  50:../DaisyExamples/libDaisy//src/sys/system.h ****             use_dcache  = true;
  51:../DaisyExamples/libDaisy//src/sys/system.h ****             use_icache  = true;
  52:../DaisyExamples/libDaisy//src/sys/system.h ****             skip_clocks = false;
  53:../DaisyExamples/libDaisy//src/sys/system.h ****         }
  54:../DaisyExamples/libDaisy//src/sys/system.h **** 
  55:../DaisyExamples/libDaisy//src/sys/system.h ****         SysClkFreq cpu_freq;
ARM GAS  C:\Users\matth\AppData\Local\Temp\ccJdUjkk.s 			page 4


  56:../DaisyExamples/libDaisy//src/sys/system.h ****         bool       use_dcache;
  57:../DaisyExamples/libDaisy//src/sys/system.h ****         bool       use_icache;
  58:../DaisyExamples/libDaisy//src/sys/system.h ****         bool       skip_clocks;
  59:../DaisyExamples/libDaisy//src/sys/system.h ****     };
  60:../DaisyExamples/libDaisy//src/sys/system.h **** 
  61:../DaisyExamples/libDaisy//src/sys/system.h ****     /** Describes the different regions of memory available to the Daisy
  62:../DaisyExamples/libDaisy//src/sys/system.h ****      * 
  63:../DaisyExamples/libDaisy//src/sys/system.h ****      */
  64:../DaisyExamples/libDaisy//src/sys/system.h ****     enum MemoryRegion
  65:../DaisyExamples/libDaisy//src/sys/system.h ****     {
  66:../DaisyExamples/libDaisy//src/sys/system.h ****         INTERNAL_FLASH = 0,
  67:../DaisyExamples/libDaisy//src/sys/system.h ****         ITCMRAM,
  68:../DaisyExamples/libDaisy//src/sys/system.h ****         DTCMRAM,
  69:../DaisyExamples/libDaisy//src/sys/system.h ****         SRAM_D1,
  70:../DaisyExamples/libDaisy//src/sys/system.h ****         SRAM_D2,
  71:../DaisyExamples/libDaisy//src/sys/system.h ****         SRAM_D3,
  72:../DaisyExamples/libDaisy//src/sys/system.h ****         SDRAM,
  73:../DaisyExamples/libDaisy//src/sys/system.h ****         QSPI,
  74:../DaisyExamples/libDaisy//src/sys/system.h ****         INVALID_ADDRESS,
  75:../DaisyExamples/libDaisy//src/sys/system.h ****     };
  76:../DaisyExamples/libDaisy//src/sys/system.h **** 
  77:../DaisyExamples/libDaisy//src/sys/system.h ****     System() {}
  78:../DaisyExamples/libDaisy//src/sys/system.h ****     ~System() {}
  63              		.loc 3 78 5 view .LVU3
  64              		.loc 3 78 5 is_stmt 0 view .LVU4
  65              	.LBE91:
  66              	.LBB92:
  67              	.LBI92:
  68              		.file 4 "../DaisyExamples/libDaisy//src/hid/usb.h"
   1:../DaisyExamples/libDaisy//src/hid/usb.h **** #pragma once
   2:../DaisyExamples/libDaisy//src/hid/usb.h **** #ifndef DSY_HID_USB_H
   3:../DaisyExamples/libDaisy//src/hid/usb.h **** #define DSY_HID_USB_H
   4:../DaisyExamples/libDaisy//src/hid/usb.h **** #include <stdint.h>
   5:../DaisyExamples/libDaisy//src/hid/usb.h **** #include <stdlib.h>
   6:../DaisyExamples/libDaisy//src/hid/usb.h **** 
   7:../DaisyExamples/libDaisy//src/hid/usb.h **** namespace daisy
   8:../DaisyExamples/libDaisy//src/hid/usb.h **** /** @addtogroup human_interface
   9:../DaisyExamples/libDaisy//src/hid/usb.h ****     @{
  10:../DaisyExamples/libDaisy//src/hid/usb.h **** */
  11:../DaisyExamples/libDaisy//src/hid/usb.h **** 
  12:../DaisyExamples/libDaisy//src/hid/usb.h **** {
  13:../DaisyExamples/libDaisy//src/hid/usb.h **** /** 
  14:../DaisyExamples/libDaisy//src/hid/usb.h ****     @brief Interface for initializing and using the USB Peripherals on the daisy
  15:../DaisyExamples/libDaisy//src/hid/usb.h ****     @author Stephen Hensley
  16:../DaisyExamples/libDaisy//src/hid/usb.h ****     @date December 2019
  17:../DaisyExamples/libDaisy//src/hid/usb.h **** */
  18:../DaisyExamples/libDaisy//src/hid/usb.h **** class UsbHandle
  19:../DaisyExamples/libDaisy//src/hid/usb.h **** {
  20:../DaisyExamples/libDaisy//src/hid/usb.h ****   public:
  21:../DaisyExamples/libDaisy//src/hid/usb.h ****     /** Return values for USBHandle Functions */
  22:../DaisyExamples/libDaisy//src/hid/usb.h ****     enum class Result
  23:../DaisyExamples/libDaisy//src/hid/usb.h ****     {
  24:../DaisyExamples/libDaisy//src/hid/usb.h ****         OK,
  25:../DaisyExamples/libDaisy//src/hid/usb.h ****         ERR,
  26:../DaisyExamples/libDaisy//src/hid/usb.h ****     };
  27:../DaisyExamples/libDaisy//src/hid/usb.h **** 
  28:../DaisyExamples/libDaisy//src/hid/usb.h ****     /** Specified which of the two USB Peripherals to initialize. */
ARM GAS  C:\Users\matth\AppData\Local\Temp\ccJdUjkk.s 			page 5


  29:../DaisyExamples/libDaisy//src/hid/usb.h ****     enum UsbPeriph
  30:../DaisyExamples/libDaisy//src/hid/usb.h ****     {
  31:../DaisyExamples/libDaisy//src/hid/usb.h ****         FS_INTERNAL, /**< Internal pin */
  32:../DaisyExamples/libDaisy//src/hid/usb.h ****         FS_EXTERNAL, /**< FS External D+ pin is Pin 38 (GPIO32). FS External D- pin is Pin 37 (GPIO
  33:../DaisyExamples/libDaisy//src/hid/usb.h ****         FS_BOTH,     /**< Both */
  34:../DaisyExamples/libDaisy//src/hid/usb.h ****     };
  35:../DaisyExamples/libDaisy//src/hid/usb.h **** 
  36:../DaisyExamples/libDaisy//src/hid/usb.h **** 
  37:../DaisyExamples/libDaisy//src/hid/usb.h ****     /** Function called upon reception of a buffer */
  38:../DaisyExamples/libDaisy//src/hid/usb.h ****     typedef void (*ReceiveCallback)(uint8_t* buff, uint32_t* len);
  39:../DaisyExamples/libDaisy//src/hid/usb.h **** 
  40:../DaisyExamples/libDaisy//src/hid/usb.h ****     UsbHandle() {}
  41:../DaisyExamples/libDaisy//src/hid/usb.h **** 
  42:../DaisyExamples/libDaisy//src/hid/usb.h ****     ~UsbHandle() {}
  69              		.loc 4 42 5 is_stmt 1 view .LVU5
  70              		.loc 4 42 5 is_stmt 0 view .LVU6
  71              	.LBE92:
  72              	.LBB93:
  73              	.LBI93:
  74              		.file 5 "../DaisyExamples/libDaisy//src/per/adc.h"
   1:../DaisyExamples/libDaisy//src/per/adc.h **** #pragma once
   2:../DaisyExamples/libDaisy//src/per/adc.h **** #ifndef DSY_ADC_H
   3:../DaisyExamples/libDaisy//src/per/adc.h **** #define DSY_ADC_H /**< Macro */
   4:../DaisyExamples/libDaisy//src/per/adc.h **** #include <stdint.h>
   5:../DaisyExamples/libDaisy//src/per/adc.h **** #include <stdlib.h>
   6:../DaisyExamples/libDaisy//src/per/adc.h **** #include "daisy_core.h"
   7:../DaisyExamples/libDaisy//src/per/adc.h **** #include "per/gpio.h"
   8:../DaisyExamples/libDaisy//src/per/adc.h **** 
   9:../DaisyExamples/libDaisy//src/per/adc.h **** #define DSY_ADC_MAX_CHANNELS 16 /**< Maximum number of ADC channels */
  10:../DaisyExamples/libDaisy//src/per/adc.h **** 
  11:../DaisyExamples/libDaisy//src/per/adc.h **** namespace daisy
  12:../DaisyExamples/libDaisy//src/per/adc.h **** {
  13:../DaisyExamples/libDaisy//src/per/adc.h **** /** @addtogroup per_analog
  14:../DaisyExamples/libDaisy//src/per/adc.h ****     @{
  15:../DaisyExamples/libDaisy//src/per/adc.h **** */
  16:../DaisyExamples/libDaisy//src/per/adc.h **** 
  17:../DaisyExamples/libDaisy//src/per/adc.h **** /* While there may not be many configuration options here,
  18:../DaisyExamples/libDaisy//src/per/adc.h **** using a struct like this allows us to add more configuration
  19:../DaisyExamples/libDaisy//src/per/adc.h **** later without breaking existing functionality.
  20:../DaisyExamples/libDaisy//src/per/adc.h **** */
  21:../DaisyExamples/libDaisy//src/per/adc.h **** 
  22:../DaisyExamples/libDaisy//src/per/adc.h **** /** @brief   Configuration Structure for an ADC Channel 
  23:../DaisyExamples/libDaisy//src/per/adc.h ****  *  @details This can be used to configure a a single input, 
  24:../DaisyExamples/libDaisy//src/per/adc.h ****  *           or a multiplexed input, allowing up to 8 inputs on 
  25:../DaisyExamples/libDaisy//src/per/adc.h ****  *           one channel.
  26:../DaisyExamples/libDaisy//src/per/adc.h ****  *  @note    Sharing data lines to multiple muxes _is_ possible, but
  27:../DaisyExamples/libDaisy//src/per/adc.h ****  *           each channel sharing data lines must be set to the maximum
  28:../DaisyExamples/libDaisy//src/per/adc.h ****  *           number of channels, even if some multiplexers have fewer
  29:../DaisyExamples/libDaisy//src/per/adc.h ****  *           inputs connected.
  30:../DaisyExamples/libDaisy//src/per/adc.h **** */
  31:../DaisyExamples/libDaisy//src/per/adc.h **** struct AdcChannelConfig
  32:../DaisyExamples/libDaisy//src/per/adc.h **** {
  33:../DaisyExamples/libDaisy//src/per/adc.h ****     /** Which pin to use for multiplexing */
  34:../DaisyExamples/libDaisy//src/per/adc.h ****     enum MuxPin
  35:../DaisyExamples/libDaisy//src/per/adc.h ****     {
  36:../DaisyExamples/libDaisy//src/per/adc.h ****         MUX_SEL_0,    /**< & */
  37:../DaisyExamples/libDaisy//src/per/adc.h ****         MUX_SEL_1,    /**< & */
ARM GAS  C:\Users\matth\AppData\Local\Temp\ccJdUjkk.s 			page 6


  38:../DaisyExamples/libDaisy//src/per/adc.h ****         MUX_SEL_2,    /**< & */
  39:../DaisyExamples/libDaisy//src/per/adc.h ****         MUX_SEL_LAST, /**< & */
  40:../DaisyExamples/libDaisy//src/per/adc.h ****     };
  41:../DaisyExamples/libDaisy//src/per/adc.h **** 
  42:../DaisyExamples/libDaisy//src/per/adc.h ****     /** Initializes a single ADC pin as an ADC. 
  43:../DaisyExamples/libDaisy//src/per/adc.h ****     \param pin Pin to init.
  44:../DaisyExamples/libDaisy//src/per/adc.h ****      */
  45:../DaisyExamples/libDaisy//src/per/adc.h ****     void InitSingle(dsy_gpio_pin pin);
  46:../DaisyExamples/libDaisy//src/per/adc.h **** 
  47:../DaisyExamples/libDaisy//src/per/adc.h ****     /** 
  48:../DaisyExamples/libDaisy//src/per/adc.h ****     Initializes a single ADC pin as a Multiplexed ADC.
  49:../DaisyExamples/libDaisy//src/per/adc.h ****     Requires a CD405X Multiplexer connected to the pin.
  50:../DaisyExamples/libDaisy//src/per/adc.h ****     You only need to supply the mux pins that are required,
  51:../DaisyExamples/libDaisy//src/per/adc.h ****     e.g. a 4052 mux would only require mux_0 and mux_1.
  52:../DaisyExamples/libDaisy//src/per/adc.h ****     Internal Callbacks handle the pin addressing.
  53:../DaisyExamples/libDaisy//src/per/adc.h ****     \param mux_channels must be 1-8
  54:../DaisyExamples/libDaisy//src/per/adc.h ****     \param mux_0 First mux pin
  55:../DaisyExamples/libDaisy//src/per/adc.h ****     \param mux_1 Second mux pin
  56:../DaisyExamples/libDaisy//src/per/adc.h ****     \param mux_2 Third mux pin
  57:../DaisyExamples/libDaisy//src/per/adc.h ****     \param adc_pin &
  58:../DaisyExamples/libDaisy//src/per/adc.h ****     */
  59:../DaisyExamples/libDaisy//src/per/adc.h ****     void InitMux(dsy_gpio_pin adc_pin,
  60:../DaisyExamples/libDaisy//src/per/adc.h ****                  size_t       mux_channels,
  61:../DaisyExamples/libDaisy//src/per/adc.h ****                  dsy_gpio_pin mux_0,
  62:../DaisyExamples/libDaisy//src/per/adc.h ****                  dsy_gpio_pin mux_1 = {DSY_GPIOX, 0},
  63:../DaisyExamples/libDaisy//src/per/adc.h ****                  dsy_gpio_pin mux_2 = {DSY_GPIOX, 0});
  64:../DaisyExamples/libDaisy//src/per/adc.h **** 
  65:../DaisyExamples/libDaisy//src/per/adc.h ****     dsy_gpio pin_;                   /**< & */
  66:../DaisyExamples/libDaisy//src/per/adc.h ****     dsy_gpio mux_pin_[MUX_SEL_LAST]; /**< & */
  67:../DaisyExamples/libDaisy//src/per/adc.h ****     uint8_t  mux_channels_;          /**< & */
  68:../DaisyExamples/libDaisy//src/per/adc.h **** };
  69:../DaisyExamples/libDaisy//src/per/adc.h **** 
  70:../DaisyExamples/libDaisy//src/per/adc.h **** /**
  71:../DaisyExamples/libDaisy//src/per/adc.h ****    @brief Handler for analog to digital conversion
  72:../DaisyExamples/libDaisy//src/per/adc.h **** */
  73:../DaisyExamples/libDaisy//src/per/adc.h **** class AdcHandle
  74:../DaisyExamples/libDaisy//src/per/adc.h **** {
  75:../DaisyExamples/libDaisy//src/per/adc.h ****   public:
  76:../DaisyExamples/libDaisy//src/per/adc.h ****     /** Supported oversampling amounts */
  77:../DaisyExamples/libDaisy//src/per/adc.h ****     enum OverSampling
  78:../DaisyExamples/libDaisy//src/per/adc.h ****     {
  79:../DaisyExamples/libDaisy//src/per/adc.h ****         OVS_NONE, /**< & */
  80:../DaisyExamples/libDaisy//src/per/adc.h ****         OVS_4,    /**< & */
  81:../DaisyExamples/libDaisy//src/per/adc.h ****         OVS_8,    /**< & */
  82:../DaisyExamples/libDaisy//src/per/adc.h ****         OVS_16,   /**< & */
  83:../DaisyExamples/libDaisy//src/per/adc.h ****         OVS_32,   /**< & */
  84:../DaisyExamples/libDaisy//src/per/adc.h ****         OVS_64,   /**< & */
  85:../DaisyExamples/libDaisy//src/per/adc.h ****         OVS_128,  /**< & */
  86:../DaisyExamples/libDaisy//src/per/adc.h ****         OVS_256,  /**< & */
  87:../DaisyExamples/libDaisy//src/per/adc.h ****         OVS_512,  /**< & */
  88:../DaisyExamples/libDaisy//src/per/adc.h ****         OVS_1024, /**< & */
  89:../DaisyExamples/libDaisy//src/per/adc.h ****         OVS_LAST, /**< & */
  90:../DaisyExamples/libDaisy//src/per/adc.h ****     };
  91:../DaisyExamples/libDaisy//src/per/adc.h **** 
  92:../DaisyExamples/libDaisy//src/per/adc.h ****     AdcHandle() {}
  93:../DaisyExamples/libDaisy//src/per/adc.h ****     ~AdcHandle() {}
  75              		.loc 5 93 5 is_stmt 1 view .LVU7
ARM GAS  C:\Users\matth\AppData\Local\Temp\ccJdUjkk.s 			page 7


  76              		.loc 5 93 5 is_stmt 0 view .LVU8
  77              	.LBE93:
  78              	.LBB94:
  79              	.LBI94:
  80              		.file 6 "../DaisyExamples/libDaisy//src/hid/audio.h"
   1:../DaisyExamples/libDaisy//src/hid/audio.h **** #ifndef DSY_AUDIO_H
   2:../DaisyExamples/libDaisy//src/hid/audio.h **** #define DSY_AUDIO_H /**< & */
   3:../DaisyExamples/libDaisy//src/hid/audio.h **** 
   4:../DaisyExamples/libDaisy//src/hid/audio.h **** #include "per/sai.h"
   5:../DaisyExamples/libDaisy//src/hid/audio.h **** 
   6:../DaisyExamples/libDaisy//src/hid/audio.h **** namespace daisy
   7:../DaisyExamples/libDaisy//src/hid/audio.h **** {
   8:../DaisyExamples/libDaisy//src/hid/audio.h **** /** @brief Audio Engine Handle
   9:../DaisyExamples/libDaisy//src/hid/audio.h ****  *  @ingroup audio 
  10:../DaisyExamples/libDaisy//src/hid/audio.h ****  *  @details This class allows for higher level access to an audio engine.
  11:../DaisyExamples/libDaisy//src/hid/audio.h ****  *           If you're using a SOM like the DaisySeed or DaisyPatchSM (or any 
  12:../DaisyExamples/libDaisy//src/hid/audio.h ****  *            board that includes one of those objects) then the intialization
  13:../DaisyExamples/libDaisy//src/hid/audio.h ****  *            is already taken  care of.
  14:../DaisyExamples/libDaisy//src/hid/audio.h ****  *           If you're setting up your own custom hardware, or need to make changes
  15:../DaisyExamples/libDaisy//src/hid/audio.h ****  *           you will have to take the following steps:
  16:../DaisyExamples/libDaisy//src/hid/audio.h ****  *             1. Create and Initialize an SaiHandle or two depending on your requirements
  17:../DaisyExamples/libDaisy//src/hid/audio.h ****  *             2. Initialize the Audio Handle with the desired settings and the Initialized SaiHand
  18:../DaisyExamples/libDaisy//src/hid/audio.h ****  *             3. If the connected codec requires special configuration or initialization, do so
  19:../DaisyExamples/libDaisy//src/hid/audio.h ****  *             4. Write a callback method using either the AudioCallback or the InterleavingAudioCa
  20:../DaisyExamples/libDaisy//src/hid/audio.h ****  *             5. Start the Audio using one of the StartAudio function
  21:../DaisyExamples/libDaisy//src/hid/audio.h ****  */
  22:../DaisyExamples/libDaisy//src/hid/audio.h **** class AudioHandle
  23:../DaisyExamples/libDaisy//src/hid/audio.h **** {
  24:../DaisyExamples/libDaisy//src/hid/audio.h ****   public:
  25:../DaisyExamples/libDaisy//src/hid/audio.h ****     /** Manually configurable details about the Audio Engine */
  26:../DaisyExamples/libDaisy//src/hid/audio.h ****     /** TODO: Figure out how to get samplerate in here. */
  27:../DaisyExamples/libDaisy//src/hid/audio.h ****     struct Config
  28:../DaisyExamples/libDaisy//src/hid/audio.h ****     {
  29:../DaisyExamples/libDaisy//src/hid/audio.h ****         /** number of samples to process per callback */
  30:../DaisyExamples/libDaisy//src/hid/audio.h ****         size_t blocksize;
  31:../DaisyExamples/libDaisy//src/hid/audio.h **** 
  32:../DaisyExamples/libDaisy//src/hid/audio.h ****         /**< Sample rate of audio */
  33:../DaisyExamples/libDaisy//src/hid/audio.h ****         SaiHandle::Config::SampleRate samplerate;
  34:../DaisyExamples/libDaisy//src/hid/audio.h **** 
  35:../DaisyExamples/libDaisy//src/hid/audio.h ****         /** factor for adjustment before and after callback for hardware that may have extra headro
  36:../DaisyExamples/libDaisy//src/hid/audio.h ****         float postgain;
  37:../DaisyExamples/libDaisy//src/hid/audio.h **** 
  38:../DaisyExamples/libDaisy//src/hid/audio.h ****         /** factor for additional one-sided compensation to audio path for hardware that may
  39:../DaisyExamples/libDaisy//src/hid/audio.h ****          *  have unequal input/output ranges
  40:../DaisyExamples/libDaisy//src/hid/audio.h ****          */
  41:../DaisyExamples/libDaisy//src/hid/audio.h ****         float output_compensation;
  42:../DaisyExamples/libDaisy//src/hid/audio.h **** 
  43:../DaisyExamples/libDaisy//src/hid/audio.h ****         /** Sets default values for config struct */
  44:../DaisyExamples/libDaisy//src/hid/audio.h ****         Config()
  45:../DaisyExamples/libDaisy//src/hid/audio.h ****         : blocksize(48),
  46:../DaisyExamples/libDaisy//src/hid/audio.h ****           samplerate(SaiHandle::Config::SampleRate::SAI_48KHZ),
  47:../DaisyExamples/libDaisy//src/hid/audio.h ****           postgain(1.f),
  48:../DaisyExamples/libDaisy//src/hid/audio.h ****           output_compensation(1.f)
  49:../DaisyExamples/libDaisy//src/hid/audio.h ****         {
  50:../DaisyExamples/libDaisy//src/hid/audio.h ****         }
  51:../DaisyExamples/libDaisy//src/hid/audio.h ****     };
  52:../DaisyExamples/libDaisy//src/hid/audio.h **** 
ARM GAS  C:\Users\matth\AppData\Local\Temp\ccJdUjkk.s 			page 8


  53:../DaisyExamples/libDaisy//src/hid/audio.h ****     enum class Result
  54:../DaisyExamples/libDaisy//src/hid/audio.h ****     {
  55:../DaisyExamples/libDaisy//src/hid/audio.h ****         OK,
  56:../DaisyExamples/libDaisy//src/hid/audio.h ****         ERR,
  57:../DaisyExamples/libDaisy//src/hid/audio.h ****     };
  58:../DaisyExamples/libDaisy//src/hid/audio.h **** 
  59:../DaisyExamples/libDaisy//src/hid/audio.h ****     /** Non-Interleaving input buffer
  60:../DaisyExamples/libDaisy//src/hid/audio.h ****      * Buffer arranged by float[chn][sample] 
  61:../DaisyExamples/libDaisy//src/hid/audio.h ****      * const so that the user can't modify the input
  62:../DaisyExamples/libDaisy//src/hid/audio.h ****      */
  63:../DaisyExamples/libDaisy//src/hid/audio.h ****     typedef const float* const* InputBuffer;
  64:../DaisyExamples/libDaisy//src/hid/audio.h **** 
  65:../DaisyExamples/libDaisy//src/hid/audio.h ****     /** Non-Interleaving output buffer
  66:../DaisyExamples/libDaisy//src/hid/audio.h ****      * Arranged by float[chn][sample] 
  67:../DaisyExamples/libDaisy//src/hid/audio.h ****      */
  68:../DaisyExamples/libDaisy//src/hid/audio.h ****     typedef float** OutputBuffer;
  69:../DaisyExamples/libDaisy//src/hid/audio.h **** 
  70:../DaisyExamples/libDaisy//src/hid/audio.h ****     /** Type for a Non-Interleaving audio callback 
  71:../DaisyExamples/libDaisy//src/hid/audio.h ****      * Non-Interleaving audio callbacks in daisy will be of this type
  72:../DaisyExamples/libDaisy//src/hid/audio.h ****      */
  73:../DaisyExamples/libDaisy//src/hid/audio.h ****     typedef void (*AudioCallback)(InputBuffer  in,
  74:../DaisyExamples/libDaisy//src/hid/audio.h ****                                   OutputBuffer out,
  75:../DaisyExamples/libDaisy//src/hid/audio.h ****                                   size_t       size);
  76:../DaisyExamples/libDaisy//src/hid/audio.h **** 
  77:../DaisyExamples/libDaisy//src/hid/audio.h ****     /** Interleaving Input buffer
  78:../DaisyExamples/libDaisy//src/hid/audio.h ****      ** audio is prepared as { L0, R0, L1, R1, . . . LN, RN }]
  79:../DaisyExamples/libDaisy//src/hid/audio.h ****      ** this is const, as the user shouldn't modify it
  80:../DaisyExamples/libDaisy//src/hid/audio.h ****     */
  81:../DaisyExamples/libDaisy//src/hid/audio.h ****     typedef const float* InterleavingInputBuffer;
  82:../DaisyExamples/libDaisy//src/hid/audio.h **** 
  83:../DaisyExamples/libDaisy//src/hid/audio.h ****     /** Interleaving Output buffer 
  84:../DaisyExamples/libDaisy//src/hid/audio.h ****      ** audio is prepared as { L0, R0, L1, R1, . . . LN, RN }
  85:../DaisyExamples/libDaisy//src/hid/audio.h ****     */
  86:../DaisyExamples/libDaisy//src/hid/audio.h ****     typedef float* InterleavingOutputBuffer;
  87:../DaisyExamples/libDaisy//src/hid/audio.h **** 
  88:../DaisyExamples/libDaisy//src/hid/audio.h ****     /** Interleaving Audio Callback 
  89:../DaisyExamples/libDaisy//src/hid/audio.h ****      * Interleaving audio callbacks in daisy must be of this type
  90:../DaisyExamples/libDaisy//src/hid/audio.h ****      */
  91:../DaisyExamples/libDaisy//src/hid/audio.h ****     typedef void (*InterleavingAudioCallback)(InterleavingInputBuffer  in,
  92:../DaisyExamples/libDaisy//src/hid/audio.h ****                                               InterleavingOutputBuffer out,
  93:../DaisyExamples/libDaisy//src/hid/audio.h ****                                               size_t                   size);
  94:../DaisyExamples/libDaisy//src/hid/audio.h **** 
  95:../DaisyExamples/libDaisy//src/hid/audio.h ****     AudioHandle() : pimpl_(nullptr) {}
  96:../DaisyExamples/libDaisy//src/hid/audio.h ****     ~AudioHandle() {}
  81              		.loc 6 96 5 is_stmt 1 view .LVU9
  82              		.loc 6 96 5 is_stmt 0 view .LVU10
  83              	.LBE94:
  84              		.loc 2 22 19 view .LVU11
  85 0000 7047     		bx	lr
  86              		.cfi_endproc
  87              	.LFE2528:
  89              		.weak	_ZN5daisy9DaisySeedD1Ev
  90              		.thumb_set _ZN5daisy9DaisySeedD1Ev,_ZN5daisy9DaisySeedD2Ev
  91 0002 00BF     		.section	.text._Z13AudioCallbackPKPKfPPfj,"ax",%progbits
  92              		.align	1
  93              		.p2align 2,,3
  94              		.global	_Z13AudioCallbackPKPKfPPfj
ARM GAS  C:\Users\matth\AppData\Local\Temp\ccJdUjkk.s 			page 9


  95              		.syntax unified
  96              		.thumb
  97              		.thumb_func
  98              		.fpu fpv5-d16
 100              	_Z13AudioCallbackPKPKfPPfj:
 101              	.LVL2:
 102              	.LFB4779:
 103              		.file 7 "patching1.cpp"
   1:patching1.cpp **** #include "daisy_seed.h"
   2:patching1.cpp **** #include "daisysp.h"
   3:patching1.cpp **** 
   4:patching1.cpp **** using namespace daisy;
   5:patching1.cpp **** using namespace daisysp;
   6:patching1.cpp **** using namespace daisy::seed;
   7:patching1.cpp **** 
   8:patching1.cpp **** // took these from Arduino source code, need to check this works okay!
   9:patching1.cpp **** #define bitRead(value, bit) (((value) >> (bit)) & 0x01)
  10:patching1.cpp **** #define bitSet(value, bit) ((value) |= (1UL << (bit)))
  11:patching1.cpp **** #define bitClear(value, bit) ((value) &= ~(1UL << (bit)))
  12:patching1.cpp **** #define bitWrite(value, bit, bitvalue) (bitvalue ? bitSet(value, bit) : bitClear(value, bit))
  13:patching1.cpp **** 
  14:patching1.cpp **** // include polymod classes
  15:patching1.cpp **** #include "Patchbay.h"
  16:patching1.cpp **** #include "SocketInput.h"
  17:patching1.cpp **** #include "SocketOutput.h"
  18:patching1.cpp **** #include "modules/Module.h"
  19:patching1.cpp **** #include "modules/VCO.h"
  20:patching1.cpp **** #include "modules/Output.h"
  21:patching1.cpp **** 
  22:patching1.cpp **** // define polymod things (todo: don't hardcode sizes/lengths of things)
  23:patching1.cpp **** //Patchbay patchbay;
  24:patching1.cpp **** uint8_t patchingInputValues[32];
  25:patching1.cpp **** bool ledStates[5];
  26:patching1.cpp **** int numOutputRegisters = 4;
  27:patching1.cpp **** int numInputRegisters = 4;
  28:patching1.cpp **** ShiftRegister595 outputChain;
  29:patching1.cpp **** dsy_gpio_pin outputChainPins[3] = {D1,D2,D7};
  30:patching1.cpp **** AdcChannelConfig analogInputs[2];
  31:patching1.cpp **** float potValues[16];
  32:patching1.cpp **** //Module modules[16];
  33:patching1.cpp **** //VCO vco1;
  34:patching1.cpp **** //Output output;
  35:patching1.cpp **** //SocketOutput socketOutputs[32];
  36:patching1.cpp **** //SocketInput socketInputs[32];
  37:patching1.cpp **** 
  38:patching1.cpp **** DaisySeed hw;
  39:patching1.cpp **** 
  40:patching1.cpp **** void AudioCallback(AudioHandle::InputBuffer in, AudioHandle::OutputBuffer out, size_t size)
  41:patching1.cpp **** {
 104              		.loc 7 41 1 is_stmt 1 view -0
 105              		.cfi_startproc
 106              		@ args = 0, pretend = 0, frame = 8
 107              		@ frame_needed = 0, uses_anonymous_args = 0
  42:patching1.cpp **** 	for (size_t i = 0; i < size; i++)
 108              		.loc 7 42 2 view .LVU13
 109              	.LBB95:
 110              		.loc 7 42 23 view .LVU14
ARM GAS  C:\Users\matth\AppData\Local\Temp\ccJdUjkk.s 			page 10


 111 0000 0AB3     		cbz	r2, .L15
 112 0002 1346     		mov	r3, r2
 113 0004 9200     		lsls	r2, r2, #2
 114              	.LVL3:
 115              		.loc 7 42 23 is_stmt 0 view .LVU15
 116              	.LBE95:
  41:patching1.cpp **** 	for (size_t i = 0; i < size; i++)
 117              		.loc 7 41 1 view .LVU16
 118 0006 10B5     		push	{r4, lr}
 119              		.cfi_def_cfa_offset 8
 120              		.cfi_offset 4, -8
 121              		.cfi_offset 14, -4
 122              	.LBB96:
  43:patching1.cpp **** 	{
  44:patching1.cpp **** 		out[0][i] = 0.0f;
 123              		.loc 7 44 8 view .LVU17
 124 0008 D1E90004 		ldrd	r0, r4, [r1]
 125              	.LVL4:
 126              		.loc 7 44 8 view .LVU18
 127              	.LBE96:
  41:patching1.cpp **** 	for (size_t i = 0; i < size; i++)
 128              		.loc 7 41 1 view .LVU19
 129 000c 82B0     		sub	sp, sp, #8
 130              		.cfi_def_cfa_offset 16
 131 000e 04EB8303 		add	r3, r4, r3, lsl #2
 132              	.LVL5:
  41:patching1.cpp **** 	for (size_t i = 0; i < size; i++)
 133              		.loc 7 41 1 view .LVU20
 134 0012 9842     		cmp	r0, r3
 135 0014 02D2     		bcs	.L9
 136 0016 8118     		adds	r1, r0, r2
 137              	.LVL6:
  41:patching1.cpp **** 	for (size_t i = 0; i < size; i++)
 138              		.loc 7 41 1 view .LVU21
 139 0018 8C42     		cmp	r4, r1
 140 001a 0BD3     		bcc	.L8
 141              	.L9:
 142              	.LBB97:
 143              		.loc 7 44 13 view .LVU22
 144 001c 0021     		movs	r1, #0
 145 001e 0192     		str	r2, [sp, #4]
 146 0020 FFF7FEFF 		bl	memset
 147              	.LVL7:
  45:patching1.cpp **** 		out[1][i] = 0.0f;
 148              		.loc 7 45 13 view .LVU23
 149 0024 019A     		ldr	r2, [sp, #4]
 150 0026 0021     		movs	r1, #0
 151 0028 2046     		mov	r0, r4
 152              	.LBE97:
  46:patching1.cpp **** 	}
  47:patching1.cpp **** }
 153              		.loc 7 47 1 view .LVU24
 154 002a 02B0     		add	sp, sp, #8
 155              		.cfi_remember_state
 156              		.cfi_def_cfa_offset 8
 157              		@ sp needed
 158 002c BDE81040 		pop	{r4, lr}
ARM GAS  C:\Users\matth\AppData\Local\Temp\ccJdUjkk.s 			page 11


 159              		.cfi_restore 14
 160              		.cfi_restore 4
 161              		.cfi_def_cfa_offset 0
 162              	.LBB98:
  45:patching1.cpp **** 		out[1][i] = 0.0f;
 163              		.loc 7 45 13 view .LVU25
 164 0030 FFF7FEBF 		b	memset
 165              	.LVL8:
 166              	.L8:
 167              		.cfi_restore_state
  44:patching1.cpp **** 		out[1][i] = 0.0f;
 168              		.loc 7 44 3 is_stmt 1 view .LVU26
  44:patching1.cpp **** 		out[1][i] = 0.0f;
 169              		.loc 7 44 13 is_stmt 0 view .LVU27
 170 0034 0023     		movs	r3, #0
 171 0036 40F8043B 		str	r3, [r0], #4	@ float
  45:patching1.cpp **** 		out[1][i] = 0.0f;
 172              		.loc 7 45 3 is_stmt 1 view .LVU28
  42:patching1.cpp **** 	{
 173              		.loc 7 42 23 is_stmt 0 view .LVU29
 174 003a 8842     		cmp	r0, r1
  45:patching1.cpp **** 	}
 175              		.loc 7 45 13 view .LVU30
 176 003c 44F8043B 		str	r3, [r4], #4	@ float
  42:patching1.cpp **** 	{
 177              		.loc 7 42 2 is_stmt 1 view .LVU31
  42:patching1.cpp **** 	{
 178              		.loc 7 42 23 view .LVU32
 179 0040 F8D1     		bne	.L8
 180              	.LBE98:
 181              		.loc 7 47 1 is_stmt 0 view .LVU33
 182 0042 02B0     		add	sp, sp, #8
 183              		.cfi_def_cfa_offset 8
 184              		@ sp needed
 185 0044 10BD     		pop	{r4, pc}
 186              	.LVL9:
 187              	.L15:
 188              		.cfi_def_cfa_offset 0
 189              		.cfi_restore 4
 190              		.cfi_restore 14
 191              		.loc 7 47 1 view .LVU34
 192 0046 7047     		bx	lr
 193              		.cfi_endproc
 194              	.LFE4779:
 196              		.section	.text.startup.main,"ax",%progbits
 197              		.align	1
 198              		.p2align 2,,3
 199              		.global	main
 200              		.syntax unified
 201              		.thumb
 202              		.thumb_func
 203              		.fpu fpv5-d16
 205              	main:
 206              	.LFB4780:
  48:patching1.cpp **** 
  49:patching1.cpp **** int main(void)
  50:patching1.cpp **** {
ARM GAS  C:\Users\matth\AppData\Local\Temp\ccJdUjkk.s 			page 12


 207              		.loc 7 50 1 is_stmt 1 view -0
 208              		.cfi_startproc
 209              		@ args = 0, pretend = 0, frame = 8
 210              		@ frame_needed = 0, uses_anonymous_args = 0
  51:patching1.cpp **** 	hw.Init();
 211              		.loc 7 51 2 view .LVU36
  50:patching1.cpp **** 	hw.Init();
 212              		.loc 7 50 1 is_stmt 0 view .LVU37
 213 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 214              		.cfi_def_cfa_offset 28
 215              		.cfi_offset 4, -28
 216              		.cfi_offset 5, -24
 217              		.cfi_offset 6, -20
 218              		.cfi_offset 7, -16
 219              		.cfi_offset 8, -12
 220              		.cfi_offset 9, -8
 221              		.cfi_offset 14, -4
 222              		.loc 7 51 9 view .LVU38
 223 0004 0021     		movs	r1, #0
  50:patching1.cpp **** 	hw.Init();
 224              		.loc 7 50 1 view .LVU39
 225 0006 83B0     		sub	sp, sp, #12
 226              		.cfi_def_cfa_offset 40
 227              		.loc 7 51 9 view .LVU40
 228 0008 2E48     		ldr	r0, .L29
 229 000a 0224     		movs	r4, #2
 230 000c FFF7FEFF 		bl	_ZN5daisy9DaisySeed4InitEb
 231              	.LVL10:
  52:patching1.cpp **** 	hw.SetAudioBlockSize(4); // number of samples handled per callback
 232              		.loc 7 52 2 is_stmt 1 view .LVU41
  53:patching1.cpp **** 	hw.SetAudioSampleRate(SaiHandle::Config::SampleRate::SAI_48KHZ);
  54:patching1.cpp **** 
  55:patching1.cpp **** 	outputChain.Init(outputChainPins, numOutputRegisters+1);
 233              		.loc 7 55 54 is_stmt 0 view .LVU42
 234 0010 DFF8C880 		ldr	r8, .L29+24
  52:patching1.cpp **** 	hw.SetAudioBlockSize(4); // number of samples handled per callback
 235              		.loc 7 52 22 view .LVU43
 236 0014 0421     		movs	r1, #4
 237 0016 2B48     		ldr	r0, .L29
 238 0018 FFF7FEFF 		bl	_ZN5daisy9DaisySeed17SetAudioBlockSizeEj
 239              	.LVL11:
  53:patching1.cpp **** 	hw.SetAudioSampleRate(SaiHandle::Config::SampleRate::SAI_48KHZ);
 240              		.loc 7 53 2 is_stmt 1 view .LVU44
  53:patching1.cpp **** 	hw.SetAudioSampleRate(SaiHandle::Config::SampleRate::SAI_48KHZ);
 241              		.loc 7 53 23 is_stmt 0 view .LVU45
 242 001c 0321     		movs	r1, #3
 243 001e 2948     		ldr	r0, .L29
 244 0020 0025     		movs	r5, #0
 245 0022 FFF7FEFF 		bl	_ZN5daisy9DaisySeed18SetAudioSampleRateENS_9SaiHandle6Config10SampleRateE
 246              	.LVL12:
 247              		.loc 7 55 2 is_stmt 1 view .LVU46
 248              		.loc 7 55 54 is_stmt 0 view .LVU47
 249 0026 D8F80020 		ldr	r2, [r8]
 250              		.loc 7 55 18 view .LVU48
 251 002a 2749     		ldr	r1, .L29+4
 252 002c 0132     		adds	r2, r2, #1
 253 002e 2748     		ldr	r0, .L29+8
ARM GAS  C:\Users\matth\AppData\Local\Temp\ccJdUjkk.s 			page 13


 254 0030 FFF7FEFF 		bl	_ZN16ShiftRegister5954InitEP12dsy_gpio_pinj
 255              	.LVL13:
  56:patching1.cpp **** 	analogInputs[0].InitSingle(A0);
 256              		.loc 7 56 2 is_stmt 1 view .LVU49
 257              	.LBB99:
 258              	.LBI99:
 259              		.file 8 "../DaisyExamples/libDaisy//src/daisy_core.h"
   1:../DaisyExamples/libDaisy//src/daisy_core.h **** #pragma once
   2:../DaisyExamples/libDaisy//src/daisy_core.h **** #ifndef DSY_CORE_HW_H
   3:../DaisyExamples/libDaisy//src/daisy_core.h **** #define DSY_CORE_HW_H /**< & */
   4:../DaisyExamples/libDaisy//src/daisy_core.h **** #include <stdint.h>
   5:../DaisyExamples/libDaisy//src/daisy_core.h **** #include <stdlib.h>
   6:../DaisyExamples/libDaisy//src/daisy_core.h **** 
   7:../DaisyExamples/libDaisy//src/daisy_core.h **** #if defined(_MSC_VER)
   8:../DaisyExamples/libDaisy//src/daisy_core.h **** #define FORCE_INLINE __forceinline /**< & */
   9:../DaisyExamples/libDaisy//src/daisy_core.h **** #elif defined(__clang__)
  10:../DaisyExamples/libDaisy//src/daisy_core.h **** #define FORCE_INLINE inline __attribute__((always_inline)) /**< & */
  11:../DaisyExamples/libDaisy//src/daisy_core.h **** #pragma clang diagnostic ignored "-Wduplicate-decl-specifier"
  12:../DaisyExamples/libDaisy//src/daisy_core.h **** #elif defined(__GNUC__)
  13:../DaisyExamples/libDaisy//src/daisy_core.h **** #define FORCE_INLINE inline __attribute__((always_inline)) /**< & */
  14:../DaisyExamples/libDaisy//src/daisy_core.h **** #else
  15:../DaisyExamples/libDaisy//src/daisy_core.h **** #error unknown compiler
  16:../DaisyExamples/libDaisy//src/daisy_core.h **** #endif
  17:../DaisyExamples/libDaisy//src/daisy_core.h **** 
  18:../DaisyExamples/libDaisy//src/daisy_core.h **** /** @addtogroup utility
  19:../DaisyExamples/libDaisy//src/daisy_core.h ****     @{
  20:../DaisyExamples/libDaisy//src/daisy_core.h **** */
  21:../DaisyExamples/libDaisy//src/daisy_core.h **** 
  22:../DaisyExamples/libDaisy//src/daisy_core.h **** /** Macro for area of memory that is configured as cacheless
  23:../DaisyExamples/libDaisy//src/daisy_core.h **** This should be used primarily for DMA buffers, and the like.
  24:../DaisyExamples/libDaisy//src/daisy_core.h **** */
  25:../DaisyExamples/libDaisy//src/daisy_core.h **** #define DMA_BUFFER_MEM_SECTION __attribute__((section(".sram1_bss")))
  26:../DaisyExamples/libDaisy//src/daisy_core.h **** /** 
  27:../DaisyExamples/libDaisy//src/daisy_core.h **** THE DTCM RAM section is also non-cached. However, is not suitable 
  28:../DaisyExamples/libDaisy//src/daisy_core.h **** for DMA transfers. Performance is on par with internal SRAM w/ 
  29:../DaisyExamples/libDaisy//src/daisy_core.h **** cache enabled.
  30:../DaisyExamples/libDaisy//src/daisy_core.h **** */
  31:../DaisyExamples/libDaisy//src/daisy_core.h **** #define DTCM_MEM_SECTION __attribute__((section(".dtcmram_bss")))
  32:../DaisyExamples/libDaisy//src/daisy_core.h **** 
  33:../DaisyExamples/libDaisy//src/daisy_core.h **** #define FBIPMAX 0.999985f             /**< close to 1.0f-LSB at 16 bit */
  34:../DaisyExamples/libDaisy//src/daisy_core.h **** #define FBIPMIN (-FBIPMAX)            /**< - (1 - LSB) */
  35:../DaisyExamples/libDaisy//src/daisy_core.h **** #define U82F_SCALE 0.0078740f         /**< 1 / 127 */
  36:../DaisyExamples/libDaisy//src/daisy_core.h **** #define F2U8_SCALE 127.0f             /**< 128 - 1 */
  37:../DaisyExamples/libDaisy//src/daisy_core.h **** #define S82F_SCALE 0.0078125f         /**< 1 / (2**7) */
  38:../DaisyExamples/libDaisy//src/daisy_core.h **** #define F2S8_SCALE 127.0f             /**< (2 ** 7) - 1 */
  39:../DaisyExamples/libDaisy//src/daisy_core.h **** #define S162F_SCALE 3.0517578125e-05f /**< 1 / (2** 15) */
  40:../DaisyExamples/libDaisy//src/daisy_core.h **** #define F2S16_SCALE 32767.0f          /**< (2 ** 15) - 1 */
  41:../DaisyExamples/libDaisy//src/daisy_core.h **** #define F2S24_SCALE 8388608.0f        /**< 2 ** 23 */
  42:../DaisyExamples/libDaisy//src/daisy_core.h **** #define S242F_SCALE 1.192092896e-07f  /**< 1 / (2 ** 23) */
  43:../DaisyExamples/libDaisy//src/daisy_core.h **** #define S24SIGN 0x800000              /**< 2 ** 23 */
  44:../DaisyExamples/libDaisy//src/daisy_core.h **** #define S322F_SCALE 4.6566129e-10f    /**< 1 / (2** 31) */
  45:../DaisyExamples/libDaisy//src/daisy_core.h **** #define F2S32_SCALE 2147483647.f      /**< (2 ** 31) - 1 */
  46:../DaisyExamples/libDaisy//src/daisy_core.h **** 
  47:../DaisyExamples/libDaisy//src/daisy_core.h **** 
  48:../DaisyExamples/libDaisy//src/daisy_core.h **** /** shorthand macro for simplifying the reading of the left 
  49:../DaisyExamples/libDaisy//src/daisy_core.h ****  *  channel of a non-interleaved output buffer named out */
  50:../DaisyExamples/libDaisy//src/daisy_core.h **** #define OUT_L out[0]
ARM GAS  C:\Users\matth\AppData\Local\Temp\ccJdUjkk.s 			page 14


  51:../DaisyExamples/libDaisy//src/daisy_core.h **** 
  52:../DaisyExamples/libDaisy//src/daisy_core.h **** /** shorthand macro for simplifying the reading of the right 
  53:../DaisyExamples/libDaisy//src/daisy_core.h ****  *  channel of a non-interleaved output buffer named out */
  54:../DaisyExamples/libDaisy//src/daisy_core.h **** #define OUT_R out[1]
  55:../DaisyExamples/libDaisy//src/daisy_core.h **** 
  56:../DaisyExamples/libDaisy//src/daisy_core.h **** /** shorthand macro for simplifying the reading of the left 
  57:../DaisyExamples/libDaisy//src/daisy_core.h ****  *  channel of a non-interleaved input buffer named in */
  58:../DaisyExamples/libDaisy//src/daisy_core.h **** #define IN_L in[0]
  59:../DaisyExamples/libDaisy//src/daisy_core.h **** 
  60:../DaisyExamples/libDaisy//src/daisy_core.h **** /** shorthand macro for simplifying the reading of the right 
  61:../DaisyExamples/libDaisy//src/daisy_core.h ****  *  channel of a non-interleaved input buffer named in */
  62:../DaisyExamples/libDaisy//src/daisy_core.h **** #define IN_R in[1]
  63:../DaisyExamples/libDaisy//src/daisy_core.h **** 
  64:../DaisyExamples/libDaisy//src/daisy_core.h **** /** 
  65:../DaisyExamples/libDaisy//src/daisy_core.h ****     Computes cube.
  66:../DaisyExamples/libDaisy//src/daisy_core.h ****     \param x Number to be cubed
  67:../DaisyExamples/libDaisy//src/daisy_core.h ****     \return x ^ 3
  68:../DaisyExamples/libDaisy//src/daisy_core.h **** */
  69:../DaisyExamples/libDaisy//src/daisy_core.h **** FORCE_INLINE float cube(float x)
  70:../DaisyExamples/libDaisy//src/daisy_core.h **** {
  71:../DaisyExamples/libDaisy//src/daisy_core.h ****     return (x * x) * x;
  72:../DaisyExamples/libDaisy//src/daisy_core.h **** }
  73:../DaisyExamples/libDaisy//src/daisy_core.h **** 
  74:../DaisyExamples/libDaisy//src/daisy_core.h **** /** 
  75:../DaisyExamples/libDaisy//src/daisy_core.h ****     Converts unsigned 8-bit to float
  76:../DaisyExamples/libDaisy//src/daisy_core.h ****     \param x Number to be scaled.
  77:../DaisyExamples/libDaisy//src/daisy_core.h ****     \return Scaled number.
  78:../DaisyExamples/libDaisy//src/daisy_core.h **** */
  79:../DaisyExamples/libDaisy//src/daisy_core.h **** FORCE_INLINE float u82f(uint8_t x)
  80:../DaisyExamples/libDaisy//src/daisy_core.h **** {
  81:../DaisyExamples/libDaisy//src/daisy_core.h ****     return ((float)x - 127.f) * U82F_SCALE;
  82:../DaisyExamples/libDaisy//src/daisy_core.h **** }
  83:../DaisyExamples/libDaisy//src/daisy_core.h **** 
  84:../DaisyExamples/libDaisy//src/daisy_core.h **** /**
  85:../DaisyExamples/libDaisy//src/daisy_core.h ****     Converts float to unsigned 8-bit
  86:../DaisyExamples/libDaisy//src/daisy_core.h **** */
  87:../DaisyExamples/libDaisy//src/daisy_core.h **** FORCE_INLINE uint8_t f2u8(float x)
  88:../DaisyExamples/libDaisy//src/daisy_core.h **** {
  89:../DaisyExamples/libDaisy//src/daisy_core.h ****     x = x <= FBIPMIN ? FBIPMIN : x;
  90:../DaisyExamples/libDaisy//src/daisy_core.h ****     x = x >= FBIPMAX ? FBIPMAX : x;
  91:../DaisyExamples/libDaisy//src/daisy_core.h ****     return (uint8_t)((x * F2U8_SCALE) + F2U8_SCALE);
  92:../DaisyExamples/libDaisy//src/daisy_core.h **** }
  93:../DaisyExamples/libDaisy//src/daisy_core.h **** 
  94:../DaisyExamples/libDaisy//src/daisy_core.h **** 
  95:../DaisyExamples/libDaisy//src/daisy_core.h **** /** 
  96:../DaisyExamples/libDaisy//src/daisy_core.h ****     Converts Signed 8-bit to float
  97:../DaisyExamples/libDaisy//src/daisy_core.h ****     \param x Number to be scaled.
  98:../DaisyExamples/libDaisy//src/daisy_core.h ****     \return Scaled number.
  99:../DaisyExamples/libDaisy//src/daisy_core.h **** */
 100:../DaisyExamples/libDaisy//src/daisy_core.h **** FORCE_INLINE float s82f(int8_t x)
 101:../DaisyExamples/libDaisy//src/daisy_core.h **** {
 102:../DaisyExamples/libDaisy//src/daisy_core.h ****     return (float)x * S82F_SCALE;
 103:../DaisyExamples/libDaisy//src/daisy_core.h **** }
 104:../DaisyExamples/libDaisy//src/daisy_core.h **** 
 105:../DaisyExamples/libDaisy//src/daisy_core.h **** /**
 106:../DaisyExamples/libDaisy//src/daisy_core.h ****     Converts float to Signed 8-bit
 107:../DaisyExamples/libDaisy//src/daisy_core.h **** */
ARM GAS  C:\Users\matth\AppData\Local\Temp\ccJdUjkk.s 			page 15


 108:../DaisyExamples/libDaisy//src/daisy_core.h **** FORCE_INLINE int8_t f2s8(float x)
 109:../DaisyExamples/libDaisy//src/daisy_core.h **** {
 110:../DaisyExamples/libDaisy//src/daisy_core.h ****     x = x <= FBIPMIN ? FBIPMIN : x;
 111:../DaisyExamples/libDaisy//src/daisy_core.h ****     x = x >= FBIPMAX ? FBIPMAX : x;
 112:../DaisyExamples/libDaisy//src/daisy_core.h ****     return (int32_t)(x * F2S8_SCALE);
 113:../DaisyExamples/libDaisy//src/daisy_core.h **** }
 114:../DaisyExamples/libDaisy//src/daisy_core.h **** 
 115:../DaisyExamples/libDaisy//src/daisy_core.h **** /** 
 116:../DaisyExamples/libDaisy//src/daisy_core.h ****     Converts Signed 16-bit to float
 117:../DaisyExamples/libDaisy//src/daisy_core.h ****     \param x Number to be scaled.
 118:../DaisyExamples/libDaisy//src/daisy_core.h ****     \return Scaled number.
 119:../DaisyExamples/libDaisy//src/daisy_core.h **** */
 120:../DaisyExamples/libDaisy//src/daisy_core.h **** FORCE_INLINE float s162f(int16_t x)
 121:../DaisyExamples/libDaisy//src/daisy_core.h **** {
 122:../DaisyExamples/libDaisy//src/daisy_core.h ****     return (float)x * S162F_SCALE;
 123:../DaisyExamples/libDaisy//src/daisy_core.h **** }
 124:../DaisyExamples/libDaisy//src/daisy_core.h **** 
 125:../DaisyExamples/libDaisy//src/daisy_core.h **** /**
 126:../DaisyExamples/libDaisy//src/daisy_core.h ****     Converts float to Signed 16-bit
 127:../DaisyExamples/libDaisy//src/daisy_core.h **** */
 128:../DaisyExamples/libDaisy//src/daisy_core.h **** FORCE_INLINE int16_t f2s16(float x)
 129:../DaisyExamples/libDaisy//src/daisy_core.h **** {
 130:../DaisyExamples/libDaisy//src/daisy_core.h ****     x = x <= FBIPMIN ? FBIPMIN : x;
 131:../DaisyExamples/libDaisy//src/daisy_core.h ****     x = x >= FBIPMAX ? FBIPMAX : x;
 132:../DaisyExamples/libDaisy//src/daisy_core.h ****     return (int32_t)(x * F2S16_SCALE);
 133:../DaisyExamples/libDaisy//src/daisy_core.h **** }
 134:../DaisyExamples/libDaisy//src/daisy_core.h **** 
 135:../DaisyExamples/libDaisy//src/daisy_core.h **** /**
 136:../DaisyExamples/libDaisy//src/daisy_core.h ****     Converts Signed 24-bit to float
 137:../DaisyExamples/libDaisy//src/daisy_core.h ****  */
 138:../DaisyExamples/libDaisy//src/daisy_core.h **** FORCE_INLINE float s242f(int32_t x)
 139:../DaisyExamples/libDaisy//src/daisy_core.h **** {
 140:../DaisyExamples/libDaisy//src/daisy_core.h ****     x = (x ^ S24SIGN) - S24SIGN; //sign extend aka ((x<<8)>>8)
 141:../DaisyExamples/libDaisy//src/daisy_core.h ****     return (float)x * S242F_SCALE;
 142:../DaisyExamples/libDaisy//src/daisy_core.h **** }
 143:../DaisyExamples/libDaisy//src/daisy_core.h **** /**
 144:../DaisyExamples/libDaisy//src/daisy_core.h ****     Converts float to Signed 24-bit
 145:../DaisyExamples/libDaisy//src/daisy_core.h ****  */
 146:../DaisyExamples/libDaisy//src/daisy_core.h **** FORCE_INLINE int32_t f2s24(float x)
 147:../DaisyExamples/libDaisy//src/daisy_core.h **** {
 148:../DaisyExamples/libDaisy//src/daisy_core.h ****     x = x <= FBIPMIN ? FBIPMIN : x;
 149:../DaisyExamples/libDaisy//src/daisy_core.h ****     x = x >= FBIPMAX ? FBIPMAX : x;
 150:../DaisyExamples/libDaisy//src/daisy_core.h ****     return (int32_t)(x * F2S24_SCALE);
 151:../DaisyExamples/libDaisy//src/daisy_core.h **** }
 152:../DaisyExamples/libDaisy//src/daisy_core.h **** 
 153:../DaisyExamples/libDaisy//src/daisy_core.h **** /**
 154:../DaisyExamples/libDaisy//src/daisy_core.h ****     Converts Signed 32-bit to float
 155:../DaisyExamples/libDaisy//src/daisy_core.h ****  */
 156:../DaisyExamples/libDaisy//src/daisy_core.h **** FORCE_INLINE float s322f(int32_t x)
 157:../DaisyExamples/libDaisy//src/daisy_core.h **** {
 158:../DaisyExamples/libDaisy//src/daisy_core.h ****     return (float)x * S322F_SCALE;
 159:../DaisyExamples/libDaisy//src/daisy_core.h **** }
 160:../DaisyExamples/libDaisy//src/daisy_core.h **** /**
 161:../DaisyExamples/libDaisy//src/daisy_core.h ****     Converts float to Signed 24-bit
 162:../DaisyExamples/libDaisy//src/daisy_core.h ****  */
 163:../DaisyExamples/libDaisy//src/daisy_core.h **** FORCE_INLINE int32_t f2s32(float x)
 164:../DaisyExamples/libDaisy//src/daisy_core.h **** {
ARM GAS  C:\Users\matth\AppData\Local\Temp\ccJdUjkk.s 			page 16


 165:../DaisyExamples/libDaisy//src/daisy_core.h ****     x = x <= FBIPMIN ? FBIPMIN : x;
 166:../DaisyExamples/libDaisy//src/daisy_core.h ****     x = x >= FBIPMAX ? FBIPMAX : x;
 167:../DaisyExamples/libDaisy//src/daisy_core.h ****     return (int32_t)(x * F2S32_SCALE);
 168:../DaisyExamples/libDaisy//src/daisy_core.h **** }
 169:../DaisyExamples/libDaisy//src/daisy_core.h **** 
 170:../DaisyExamples/libDaisy//src/daisy_core.h **** 
 171:../DaisyExamples/libDaisy//src/daisy_core.h **** /** Enums and a simple struct for defining a hardware pin on the MCU
 172:../DaisyExamples/libDaisy//src/daisy_core.h ****  *  These correlate with the stm32 datasheet, and are used to configure
 173:../DaisyExamples/libDaisy//src/daisy_core.h ****  *  the hardware.
 174:../DaisyExamples/libDaisy//src/daisy_core.h ****  * 
 175:../DaisyExamples/libDaisy//src/daisy_core.h ****  *  This along with the dsy_gpio_pin class should no longer be used.
 176:../DaisyExamples/libDaisy//src/daisy_core.h ****  *  They are available for backwards compatability. 
 177:../DaisyExamples/libDaisy//src/daisy_core.h ****  * 
 178:../DaisyExamples/libDaisy//src/daisy_core.h ****  *  Please use GPIOPort enum and the Pin struct instead.
 179:../DaisyExamples/libDaisy//src/daisy_core.h ****  */
 180:../DaisyExamples/libDaisy//src/daisy_core.h **** typedef enum
 181:../DaisyExamples/libDaisy//src/daisy_core.h **** {
 182:../DaisyExamples/libDaisy//src/daisy_core.h ****     DSY_GPIOA, /**< & */
 183:../DaisyExamples/libDaisy//src/daisy_core.h ****     DSY_GPIOB, /**< & */
 184:../DaisyExamples/libDaisy//src/daisy_core.h ****     DSY_GPIOC, /**< & */
 185:../DaisyExamples/libDaisy//src/daisy_core.h ****     DSY_GPIOD, /**< & */
 186:../DaisyExamples/libDaisy//src/daisy_core.h ****     DSY_GPIOE, /**< & */
 187:../DaisyExamples/libDaisy//src/daisy_core.h ****     DSY_GPIOF, /**< & */
 188:../DaisyExamples/libDaisy//src/daisy_core.h ****     DSY_GPIOG, /**< & */
 189:../DaisyExamples/libDaisy//src/daisy_core.h ****     DSY_GPIOH, /**< & */
 190:../DaisyExamples/libDaisy//src/daisy_core.h ****     DSY_GPIOI, /**< & */
 191:../DaisyExamples/libDaisy//src/daisy_core.h ****     DSY_GPIOJ, /**< & */
 192:../DaisyExamples/libDaisy//src/daisy_core.h ****     DSY_GPIOK, /**< & */
 193:../DaisyExamples/libDaisy//src/daisy_core.h ****     DSY_GPIOX, /** This is a non-existant port for unsupported bits of hardware. */
 194:../DaisyExamples/libDaisy//src/daisy_core.h ****     DSY_GPIO_LAST, /** Final enum member */
 195:../DaisyExamples/libDaisy//src/daisy_core.h **** } dsy_gpio_port;
 196:../DaisyExamples/libDaisy//src/daisy_core.h **** 
 197:../DaisyExamples/libDaisy//src/daisy_core.h **** /** Hardware define pins 
 198:../DaisyExamples/libDaisy//src/daisy_core.h ****  *  
 199:../DaisyExamples/libDaisy//src/daisy_core.h ****  *  The dsy_gpio_pin struct should no longer be used, and is only available for
 200:../DaisyExamples/libDaisy//src/daisy_core.h ****  *  backwards compatability.
 201:../DaisyExamples/libDaisy//src/daisy_core.h ****  * 
 202:../DaisyExamples/libDaisy//src/daisy_core.h ****  *  Please use Pin struct instead.
 203:../DaisyExamples/libDaisy//src/daisy_core.h ****  */
 204:../DaisyExamples/libDaisy//src/daisy_core.h **** typedef struct
 205:../DaisyExamples/libDaisy//src/daisy_core.h **** {
 206:../DaisyExamples/libDaisy//src/daisy_core.h ****     dsy_gpio_port port; /**< & */
 207:../DaisyExamples/libDaisy//src/daisy_core.h ****     uint8_t       pin;  /**< number 0-15 */
 208:../DaisyExamples/libDaisy//src/daisy_core.h **** } dsy_gpio_pin;
 209:../DaisyExamples/libDaisy//src/daisy_core.h **** 
 210:../DaisyExamples/libDaisy//src/daisy_core.h **** /** Helper for creating pins from port/pin combos easily
 211:../DaisyExamples/libDaisy//src/daisy_core.h ****  * 
 212:../DaisyExamples/libDaisy//src/daisy_core.h ****  *  The dsy_gpio_pin struct should no longer be used, and is only available for
 213:../DaisyExamples/libDaisy//src/daisy_core.h ****  *  backwards compatability.
 214:../DaisyExamples/libDaisy//src/daisy_core.h ****  * 
 215:../DaisyExamples/libDaisy//src/daisy_core.h ****  *  Please use Pin struct instead.
 216:../DaisyExamples/libDaisy//src/daisy_core.h **** */
 217:../DaisyExamples/libDaisy//src/daisy_core.h **** FORCE_INLINE dsy_gpio_pin dsy_pin(dsy_gpio_port port, uint8_t pin)
 218:../DaisyExamples/libDaisy//src/daisy_core.h **** {
 219:../DaisyExamples/libDaisy//src/daisy_core.h ****     dsy_gpio_pin p;
 220:../DaisyExamples/libDaisy//src/daisy_core.h ****     p.port = port;
 221:../DaisyExamples/libDaisy//src/daisy_core.h ****     p.pin  = pin;
ARM GAS  C:\Users\matth\AppData\Local\Temp\ccJdUjkk.s 			page 17


 222:../DaisyExamples/libDaisy//src/daisy_core.h ****     return p;
 223:../DaisyExamples/libDaisy//src/daisy_core.h **** }
 224:../DaisyExamples/libDaisy//src/daisy_core.h **** 
 225:../DaisyExamples/libDaisy//src/daisy_core.h **** /** Helper for testing sameness of two dsy_gpio_pins
 226:../DaisyExamples/libDaisy//src/daisy_core.h ****  *  \return    1 if same, 0 if different
 227:../DaisyExamples/libDaisy//src/daisy_core.h ****  * 
 228:../DaisyExamples/libDaisy//src/daisy_core.h ****  *  The dsy_gpio_pin struct should no longer be used, and is only available for
 229:../DaisyExamples/libDaisy//src/daisy_core.h ****  *  backwards compatability.
 230:../DaisyExamples/libDaisy//src/daisy_core.h ****  * 
 231:../DaisyExamples/libDaisy//src/daisy_core.h ****  *  Please use Pin struct instead.
 232:../DaisyExamples/libDaisy//src/daisy_core.h ****  */
 233:../DaisyExamples/libDaisy//src/daisy_core.h **** FORCE_INLINE uint8_t dsy_pin_cmp(dsy_gpio_pin *a, dsy_gpio_pin *b)
 234:../DaisyExamples/libDaisy//src/daisy_core.h **** {
 235:../DaisyExamples/libDaisy//src/daisy_core.h ****     return ((a->port == b->port) && (a->pin == b->pin));
 236:../DaisyExamples/libDaisy//src/daisy_core.h **** }
 237:../DaisyExamples/libDaisy//src/daisy_core.h **** 
 238:../DaisyExamples/libDaisy//src/daisy_core.h **** #ifdef __cplusplus
 239:../DaisyExamples/libDaisy//src/daisy_core.h **** 
 240:../DaisyExamples/libDaisy//src/daisy_core.h **** namespace daisy
 241:../DaisyExamples/libDaisy//src/daisy_core.h **** {
 242:../DaisyExamples/libDaisy//src/daisy_core.h **** /** @brief GPIO Port names */
 243:../DaisyExamples/libDaisy//src/daisy_core.h **** enum GPIOPort
 244:../DaisyExamples/libDaisy//src/daisy_core.h **** {
 245:../DaisyExamples/libDaisy//src/daisy_core.h ****     PORTA, /**< Port A */
 246:../DaisyExamples/libDaisy//src/daisy_core.h ****     PORTB, /**< Port B */
 247:../DaisyExamples/libDaisy//src/daisy_core.h ****     PORTC, /**< Port C */
 248:../DaisyExamples/libDaisy//src/daisy_core.h ****     PORTD, /**< Port D */
 249:../DaisyExamples/libDaisy//src/daisy_core.h ****     PORTE, /**< Port E */
 250:../DaisyExamples/libDaisy//src/daisy_core.h ****     PORTF, /**< Port F */
 251:../DaisyExamples/libDaisy//src/daisy_core.h ****     PORTG, /**< Port G */
 252:../DaisyExamples/libDaisy//src/daisy_core.h ****     PORTH, /**< Port H */
 253:../DaisyExamples/libDaisy//src/daisy_core.h ****     PORTI, /**< Port I */
 254:../DaisyExamples/libDaisy//src/daisy_core.h ****     PORTJ, /**< Port J */
 255:../DaisyExamples/libDaisy//src/daisy_core.h ****     PORTK, /**< Port K */
 256:../DaisyExamples/libDaisy//src/daisy_core.h ****     PORTX, /**< Used as a dummy port to signal an invalid pin. */
 257:../DaisyExamples/libDaisy//src/daisy_core.h **** };
 258:../DaisyExamples/libDaisy//src/daisy_core.h **** 
 259:../DaisyExamples/libDaisy//src/daisy_core.h **** /** @brief representation of hardware port/pin combination */
 260:../DaisyExamples/libDaisy//src/daisy_core.h **** struct Pin
 261:../DaisyExamples/libDaisy//src/daisy_core.h **** {
 262:../DaisyExamples/libDaisy//src/daisy_core.h ****     GPIOPort port;
 263:../DaisyExamples/libDaisy//src/daisy_core.h ****     uint8_t  pin;
 264:../DaisyExamples/libDaisy//src/daisy_core.h **** 
 265:../DaisyExamples/libDaisy//src/daisy_core.h ****     /** @brief Constructor creates a valid pin. 
 266:../DaisyExamples/libDaisy//src/daisy_core.h ****      *  @param pt GPIOPort between PA, and PK corresponding to STM32 Port.
 267:../DaisyExamples/libDaisy//src/daisy_core.h ****      *  @param pn pin number in range of 0-15
 268:../DaisyExamples/libDaisy//src/daisy_core.h ****     */
 269:../DaisyExamples/libDaisy//src/daisy_core.h ****     constexpr Pin(const GPIOPort pt, const uint8_t pn) : port(pt), pin(pn) {}
 270:../DaisyExamples/libDaisy//src/daisy_core.h **** 
 271:../DaisyExamples/libDaisy//src/daisy_core.h ****     /** @brief Basic Constructor creates an invalid Pin object */
 272:../DaisyExamples/libDaisy//src/daisy_core.h ****     constexpr Pin() : port(PORTX), pin(255) {}
 273:../DaisyExamples/libDaisy//src/daisy_core.h **** 
 274:../DaisyExamples/libDaisy//src/daisy_core.h ****     /** @brief checks validity of a Pin 
 275:../DaisyExamples/libDaisy//src/daisy_core.h ****      *  @retval returns true if the port is a valid hardware pin, otherwise false.
 276:../DaisyExamples/libDaisy//src/daisy_core.h ****     */
 277:../DaisyExamples/libDaisy//src/daisy_core.h ****     constexpr bool IsValid() const { return port != PORTX && pin < 16; }
 278:../DaisyExamples/libDaisy//src/daisy_core.h **** 
ARM GAS  C:\Users\matth\AppData\Local\Temp\ccJdUjkk.s 			page 18


 279:../DaisyExamples/libDaisy//src/daisy_core.h ****     /** @brief comparison operator for checking equality between Pin objects */
 280:../DaisyExamples/libDaisy//src/daisy_core.h ****     constexpr bool operator==(const Pin &rhs) const
 281:../DaisyExamples/libDaisy//src/daisy_core.h ****     {
 282:../DaisyExamples/libDaisy//src/daisy_core.h ****         return (rhs.port == port) && (rhs.pin == pin);
 283:../DaisyExamples/libDaisy//src/daisy_core.h ****     }
 284:../DaisyExamples/libDaisy//src/daisy_core.h **** 
 285:../DaisyExamples/libDaisy//src/daisy_core.h ****     /** @brief comparison operator for checking inequality between Pin objects */
 286:../DaisyExamples/libDaisy//src/daisy_core.h ****     constexpr bool operator!=(const Pin &rhs) const { return !operator==(rhs); }
 287:../DaisyExamples/libDaisy//src/daisy_core.h **** 
 288:../DaisyExamples/libDaisy//src/daisy_core.h ****     /** @brief conversion operation for converting to the old-style representation
 289:../DaisyExamples/libDaisy//src/daisy_core.h ****      *         of a pin.
 290:../DaisyExamples/libDaisy//src/daisy_core.h ****      * 
 291:../DaisyExamples/libDaisy//src/daisy_core.h ****      *  This allows the new Pin type to be used in place of the older, dsy_gpio_pin
 292:../DaisyExamples/libDaisy//src/daisy_core.h ****      *  type.
 293:../DaisyExamples/libDaisy//src/daisy_core.h ****      */
 294:../DaisyExamples/libDaisy//src/daisy_core.h ****     operator dsy_gpio_pin() const
 260              		.loc 8 294 5 view .LVU50
 261              	.LBE99:
 295:../DaisyExamples/libDaisy//src/daisy_core.h ****     {
 296:../DaisyExamples/libDaisy//src/daisy_core.h ****         return dsy_pin(static_cast<dsy_gpio_port>(port), pin);
 262              		.loc 8 296 9 view .LVU51
 263              	.LBB101:
 264              	.LBB100:
 265              	.LBI100:
 217:../DaisyExamples/libDaisy//src/daisy_core.h **** {
 266              		.loc 8 217 27 view .LVU52
 267              	.LBE100:
 268              	.LBE101:
 219:../DaisyExamples/libDaisy//src/daisy_core.h ****     p.port = port;
 269              		.loc 8 219 5 view .LVU53
 220:../DaisyExamples/libDaisy//src/daisy_core.h ****     p.pin  = pin;
 270              		.loc 8 220 5 view .LVU54
 221:../DaisyExamples/libDaisy//src/daisy_core.h ****     return p;
 271              		.loc 8 221 5 view .LVU55
 222:../DaisyExamples/libDaisy//src/daisy_core.h **** }
 272              		.loc 8 222 5 view .LVU56
 222:../DaisyExamples/libDaisy//src/daisy_core.h **** }
 273              		.loc 8 222 5 is_stmt 0 view .LVU57
 274 0034 8DF80040 		strb	r4, [sp]
 275 0038 8DF80150 		strb	r5, [sp, #1]
 276              	.LVL14:
 277              		.loc 7 56 28 view .LVU58
 278 003c 2448     		ldr	r0, .L29+12
 279 003e 0099     		ldr	r1, [sp]
 280 0040 FFF7FEFF 		bl	_ZN5daisy16AdcChannelConfig10InitSingleE12dsy_gpio_pin
 281              	.LVL15:
  57:patching1.cpp **** 	analogInputs[1].InitSingle(A1);
 282              		.loc 7 57 2 is_stmt 1 view .LVU59
 283              	.LBB102:
 284              	.LBI102:
 294:../DaisyExamples/libDaisy//src/daisy_core.h ****     {
 285              		.loc 8 294 5 view .LVU60
 286              	.LBE102:
 287              		.loc 8 296 9 view .LVU61
 288              	.LBB104:
 289              	.LBB103:
 290              	.LBI103:
ARM GAS  C:\Users\matth\AppData\Local\Temp\ccJdUjkk.s 			page 19


 217:../DaisyExamples/libDaisy//src/daisy_core.h **** {
 291              		.loc 8 217 27 view .LVU62
 292              	.LBE103:
 293              	.LBE104:
 219:../DaisyExamples/libDaisy//src/daisy_core.h ****     p.port = port;
 294              		.loc 8 219 5 view .LVU63
 220:../DaisyExamples/libDaisy//src/daisy_core.h ****     p.pin  = pin;
 295              		.loc 8 220 5 view .LVU64
 221:../DaisyExamples/libDaisy//src/daisy_core.h ****     return p;
 296              		.loc 8 221 5 view .LVU65
 222:../DaisyExamples/libDaisy//src/daisy_core.h **** }
 297              		.loc 8 222 5 view .LVU66
 222:../DaisyExamples/libDaisy//src/daisy_core.h **** }
 298              		.loc 8 222 5 is_stmt 0 view .LVU67
 299 0044 0323     		movs	r3, #3
 300 0046 8DF80450 		strb	r5, [sp, #4]
 301 004a 8DF80530 		strb	r3, [sp, #5]
 302              	.LVL16:
 303              		.loc 7 57 28 view .LVU68
 304 004e 2148     		ldr	r0, .L29+16
 305 0050 0199     		ldr	r1, [sp, #4]
 306 0052 FFF7FEFF 		bl	_ZN5daisy16AdcChannelConfig10InitSingleE12dsy_gpio_pin
 307              	.LVL17:
  58:patching1.cpp **** 	hw.adc.Init(analogInputs, 2);
 308              		.loc 7 58 2 is_stmt 1 view .LVU69
 309              		.loc 7 58 13 is_stmt 0 view .LVU70
 310 0056 0423     		movs	r3, #4
 311 0058 2246     		mov	r2, r4
 312 005a 1D49     		ldr	r1, .L29+12
 313 005c 1E48     		ldr	r0, .L29+20
 314 005e FFF7FEFF 		bl	_ZN5daisy9AdcHandle4InitEPNS_16AdcChannelConfigEjNS0_12OverSamplingE
 315              	.LVL18:
 316              	.L22:
  59:patching1.cpp **** 
  60:patching1.cpp **** 	// define sockets
  61:patching1.cpp **** 	//socketOutputs[0] = vco1.squareOut;
  62:patching1.cpp **** 	//socketInputs[0] = output.mainOutput;
  63:patching1.cpp **** 
  64:patching1.cpp **** 	while(true) {
 317              		.loc 7 64 2 is_stmt 1 view .LVU71
  65:patching1.cpp **** 		//vco1.update();
  66:patching1.cpp **** 
  67:patching1.cpp **** 		for(int i=0; i<8; i++) {
 318              		.loc 7 67 3 view .LVU72
 319              	.LBB105:
 320              		.loc 7 67 17 view .LVU73
 321 0062 DFF87C90 		ldr	r9, .L29+28
 322              		.loc 7 67 11 is_stmt 0 view .LVU74
 323 0066 0026     		movs	r6, #0
 324              	.LVL19:
 325              	.L23:
 326              	.LBB106:
 327              	.LBB107:
  68:patching1.cpp **** 			// send i-th bit to all 595s
  69:patching1.cpp **** 			for(int j=0; j<numOutputRegisters; j++) {
 328              		.loc 7 69 18 is_stmt 1 view .LVU75
 329 0068 D8F80030 		ldr	r3, [r8]
ARM GAS  C:\Users\matth\AppData\Local\Temp\ccJdUjkk.s 			page 20


 330 006c 002B     		cmp	r3, #0
 331 006e 16DD     		ble	.L19
 332 0070 0825     		movs	r5, #8
 333              		.loc 7 69 12 is_stmt 0 view .LVU76
 334 0072 0027     		movs	r7, #0
 335              	.LVL20:
 336              	.L21:
 337              		.loc 7 69 12 view .LVU77
 338 0074 FC00     		lsls	r4, r7, #3
 339 0076 E4B2     		uxtb	r4, r4
 340              	.L20:
 341              	.LBB108:
 342              	.LBB109:
  70:patching1.cpp **** 				for(int k=0; k<8; k++) {
  71:patching1.cpp **** 					uint8_t channelNumber = j*8 + k;
 343              		.loc 7 71 6 is_stmt 1 discriminator 2 view .LVU78
 344              	.LVL21:
  72:patching1.cpp **** 					bool outputBit = bitRead(channelNumber, i);
 345              		.loc 7 72 6 discriminator 2 view .LVU79
  73:patching1.cpp **** 					outputChain.Set(channelNumber, outputBit);
 346              		.loc 7 73 6 discriminator 2 view .LVU80
  72:patching1.cpp **** 					bool outputBit = bitRead(channelNumber, i);
 347              		.loc 7 72 23 is_stmt 0 discriminator 2 view .LVU81
 348 0078 44FA06F2 		asr	r2, r4, r6
 349              		.loc 7 73 21 discriminator 2 view .LVU82
 350 007c 2146     		mov	r1, r4
 351              	.LBE109:
  70:patching1.cpp **** 				for(int k=0; k<8; k++) {
 352              		.loc 7 70 19 discriminator 2 view .LVU83
 353 007e 0134     		adds	r4, r4, #1
 354              	.LVL22:
 355              	.LBB110:
 356              		.loc 7 73 21 discriminator 2 view .LVU84
 357 0080 1248     		ldr	r0, .L29+8
 358 0082 02F00102 		and	r2, r2, #1
 359              	.LBE110:
  70:patching1.cpp **** 				for(int k=0; k<8; k++) {
 360              		.loc 7 70 19 discriminator 2 view .LVU85
 361 0086 E4B2     		uxtb	r4, r4
 362              	.LBB111:
 363              		.loc 7 73 21 discriminator 2 view .LVU86
 364 0088 FFF7FEFF 		bl	_ZN16ShiftRegister5953SetEhb
 365              	.LVL23:
 366              	.LBE111:
  70:patching1.cpp **** 				for(int k=0; k<8; k++) {
 367              		.loc 7 70 5 is_stmt 1 discriminator 2 view .LVU87
  70:patching1.cpp **** 				for(int k=0; k<8; k++) {
 368              		.loc 7 70 19 discriminator 2 view .LVU88
 369 008c A542     		cmp	r5, r4
 370 008e F3D1     		bne	.L20
 371              	.LBE108:
  69:patching1.cpp **** 				for(int k=0; k<8; k++) {
 372              		.loc 7 69 4 discriminator 2 view .LVU89
 373 0090 0137     		adds	r7, r7, #1
 374              	.LVL24:
  69:patching1.cpp **** 				for(int k=0; k<8; k++) {
 375              		.loc 7 69 18 discriminator 2 view .LVU90
ARM GAS  C:\Users\matth\AppData\Local\Temp\ccJdUjkk.s 			page 21


 376 0092 D8F80030 		ldr	r3, [r8]
 377 0096 0835     		adds	r5, r5, #8
 378 0098 BB42     		cmp	r3, r7
 379 009a EDB2     		uxtb	r5, r5
 380 009c EADC     		bgt	.L21
 381              	.LVL25:
 382              	.L19:
  69:patching1.cpp **** 				for(int k=0; k<8; k++) {
 383              		.loc 7 69 18 is_stmt 0 discriminator 2 view .LVU91
 384              	.LBE107:
 385              	.LBE106:
 386              	.LBE105:
  74:patching1.cpp **** 				}
  75:patching1.cpp **** 			}
  76:patching1.cpp **** 
  77:patching1.cpp **** 			uint8_t utilOutputBits = 0;
  78:patching1.cpp **** 
  79:patching1.cpp **** 			// write the 4051 address to the util register
  80:patching1.cpp **** 			for(int j=0; j<3; j++) {
 387              		.loc 7 80 18 is_stmt 1 view .LVU92
  81:patching1.cpp **** 				bitWrite(utilOutputBits, j, bitRead(i, j));
  82:patching1.cpp **** 			}
  83:patching1.cpp **** 			// write LED states to util register
  84:patching1.cpp **** 			for(int j=0; j<5; j++) {
 388              		.loc 7 84 18 view .LVU93
 389              	.LBB115:
 390              	.LBB112:
  85:patching1.cpp **** 				bitWrite(utilOutputBits, j+3, ledStates[j]);
  86:patching1.cpp **** 			}
  87:patching1.cpp **** 
  88:patching1.cpp **** 			outputChain.Write();
 391              		.loc 7 88 4 view .LVU94
 392              		.loc 7 88 21 is_stmt 0 view .LVU95
 393 009e 0B48     		ldr	r0, .L29+8
 394              	.LBE112:
  67:patching1.cpp **** 			// send i-th bit to all 595s
 395              		.loc 7 67 3 view .LVU96
 396 00a0 0136     		adds	r6, r6, #1
 397              	.LVL26:
 398              	.LBB113:
 399              		.loc 7 88 21 view .LVU97
 400 00a2 FFF7FEFF 		bl	_ZN16ShiftRegister5955WriteEv
 401              	.LVL27:
  89:patching1.cpp **** 
  90:patching1.cpp **** 			// read analog values from 2 x 4051s
  91:patching1.cpp **** 			potValues[i] = hw.adc.GetFloat(0);
 402              		.loc 7 91 4 is_stmt 1 view .LVU98
 403              		.loc 7 91 34 is_stmt 0 view .LVU99
 404 00a6 0021     		movs	r1, #0
 405 00a8 0B48     		ldr	r0, .L29+20
 406 00aa FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 407              	.LVL28:
  92:patching1.cpp **** 			potValues[i+8] = hw.adc.GetFloat(1);
 408              		.loc 7 92 36 view .LVU100
 409 00ae 0121     		movs	r1, #1
 410 00b0 0948     		ldr	r0, .L29+20
  91:patching1.cpp **** 			potValues[i+8] = hw.adc.GetFloat(1);
ARM GAS  C:\Users\matth\AppData\Local\Temp\ccJdUjkk.s 			page 22


 411              		.loc 7 91 17 view .LVU101
 412 00b2 09ED080A 		vstr.32	s0, [r9, #-32]
 413              		.loc 7 92 4 is_stmt 1 view .LVU102
 414              		.loc 7 92 36 is_stmt 0 view .LVU103
 415 00b6 FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 416              	.LVL29:
 417              	.LBE113:
  67:patching1.cpp **** 			// send i-th bit to all 595s
 418              		.loc 7 67 17 view .LVU104
 419 00ba 082E     		cmp	r6, #8
 420              	.LBB114:
 421              		.loc 7 92 19 view .LVU105
 422 00bc A9EC010A 		vstmia.32	r9!, {s0}
 423              	.LBE114:
  67:patching1.cpp **** 			// send i-th bit to all 595s
 424              		.loc 7 67 3 is_stmt 1 view .LVU106
 425              	.LVL30:
  67:patching1.cpp **** 			// send i-th bit to all 595s
 426              		.loc 7 67 17 view .LVU107
 427 00c0 D2D1     		bne	.L23
 428 00c2 CEE7     		b	.L22
 429              	.L30:
 430              		.align	2
 431              	.L29:
 432 00c4 00000000 		.word	.LANCHOR0
 433 00c8 00000000 		.word	.LANCHOR2
 434 00cc 00000000 		.word	.LANCHOR3
 435 00d0 00000000 		.word	.LANCHOR4
 436 00d4 11000000 		.word	.LANCHOR4+17
 437 00d8 18000000 		.word	.LANCHOR0+24
 438 00dc 00000000 		.word	.LANCHOR1
 439 00e0 20000000 		.word	.LANCHOR5+32
 440              	.LBE115:
 441              		.cfi_endproc
 442              	.LFE4780:
 444              		.section	.text.startup._GLOBAL__sub_I_patchingInputValues,"ax",%progbits
 445              		.align	1
 446              		.p2align 2,,3
 447              		.syntax unified
 448              		.thumb
 449              		.thumb_func
 450              		.fpu fpv5-d16
 452              	_GLOBAL__sub_I_patchingInputValues:
 453              	.LFB5340:
  93:patching1.cpp **** 
  94:patching1.cpp **** 			// read i-th bit from all 165s
  95:patching1.cpp **** 			// (DUPLICATE/ADAPT 595 FUNCTION FOR 165?)
  96:patching1.cpp **** 
  97:patching1.cpp **** 			// read button values from util 165
  98:patching1.cpp **** 
  99:patching1.cpp **** 		}
 100:patching1.cpp **** 		for(int i=0; i<32; i++) {
 101:patching1.cpp **** 			//patchbay.updateInputChannel(i, patchingInputValues[i]);
 102:patching1.cpp **** 		}
 103:patching1.cpp **** 		//patchbay.update();
 104:patching1.cpp **** 	}
 105:patching1.cpp **** 	
ARM GAS  C:\Users\matth\AppData\Local\Temp\ccJdUjkk.s 			page 23


 106:patching1.cpp **** }...
 454              		.loc 7 106 1 view -0
 455              		.cfi_startproc
 456              		@ args = 0, pretend = 0, frame = 0
 457              		@ frame_needed = 0, uses_anonymous_args = 0
 458              	.LBB136:
 459              	.LBI136:
 460              		.loc 7 106 1 view .LVU109
 461              	.LVL31:
 462              	.LBB137:
 463              	.LBB138:
 464              	.LBI138:
  34:../DaisyExamples/libDaisy//src/dev/sr_595.h ****     ~ShiftRegister595() {}
 465              		.loc 1 34 5 view .LVU110
  34:../DaisyExamples/libDaisy//src/dev/sr_595.h ****     ~ShiftRegister595() {}
 466              		.loc 1 34 5 is_stmt 0 view .LVU111
 467              	.LBE138:
 468              	.LBE137:
 469              	.LBE136:
 470              		.loc 7 106 1 view .LVU112
 471 0000 10B5     		push	{r4, lr}
 472              		.cfi_def_cfa_offset 8
 473              		.cfi_offset 4, -8
 474              		.cfi_offset 14, -4
 475              	.LBB166:
 476              	.LBB163:
  28:patching1.cpp **** ShiftRegister595 outputChain;
 477              		.loc 7 28 18 view .LVU113
 478 0002 0B4A     		ldr	r2, .L33
 479 0004 0B49     		ldr	r1, .L33+4
 480 0006 0C48     		ldr	r0, .L33+8
 481 0008 FFF7FEFF 		bl	__aeabi_atexit
 482              	.LVL32:
  28:patching1.cpp **** ShiftRegister595 outputChain;
 483              		.loc 7 28 18 view .LVU114
 484              	.LBE163:
 485              	.LBE166:
 486              		.loc 8 296 9 is_stmt 1 view .LVU115
 219:../DaisyExamples/libDaisy//src/daisy_core.h ****     p.port = port;
 487              		.loc 8 219 5 view .LVU116
 220:../DaisyExamples/libDaisy//src/daisy_core.h ****     p.pin  = pin;
 488              		.loc 8 220 5 view .LVU117
 221:../DaisyExamples/libDaisy//src/daisy_core.h ****     return p;
 489              		.loc 8 221 5 view .LVU118
 222:../DaisyExamples/libDaisy//src/daisy_core.h **** }
 490              		.loc 8 222 5 view .LVU119
 491              		.loc 8 296 9 view .LVU120
 219:../DaisyExamples/libDaisy//src/daisy_core.h ****     p.port = port;
 492              		.loc 8 219 5 view .LVU121
 220:../DaisyExamples/libDaisy//src/daisy_core.h ****     p.pin  = pin;
 493              		.loc 8 220 5 view .LVU122
 221:../DaisyExamples/libDaisy//src/daisy_core.h ****     return p;
 494              		.loc 8 221 5 view .LVU123
 222:../DaisyExamples/libDaisy//src/daisy_core.h **** }
 495              		.loc 8 222 5 view .LVU124
 496              		.loc 8 296 9 view .LVU125
 219:../DaisyExamples/libDaisy//src/daisy_core.h ****     p.port = port;
ARM GAS  C:\Users\matth\AppData\Local\Temp\ccJdUjkk.s 			page 24


 497              		.loc 8 219 5 view .LVU126
 220:../DaisyExamples/libDaisy//src/daisy_core.h ****     p.pin  = pin;
 498              		.loc 8 220 5 view .LVU127
 221:../DaisyExamples/libDaisy//src/daisy_core.h ****     return p;
 499              		.loc 8 221 5 view .LVU128
 222:../DaisyExamples/libDaisy//src/daisy_core.h **** }
 500              		.loc 8 222 5 view .LVU129
 501              	.LBB167:
 502              	.LBB164:
  29:patching1.cpp **** dsy_gpio_pin outputChainPins[3] = {D1,D2,D7};
 503              		.loc 7 29 44 is_stmt 0 view .LVU130
 504 000c 0B4C     		ldr	r4, .L33+12
 505              	.LBB139:
 506              	.LBB140:
 507              	.LBB141:
 508              	.LBB142:
 509              	.LBB143:
 510              		.file 9 "../DaisyExamples/libDaisy//src/per/qspi.h"
   1:../DaisyExamples/libDaisy//src/per/qspi.h **** #ifndef DSY_QSPI
   2:../DaisyExamples/libDaisy//src/per/qspi.h **** #define DSY_QSPI /**< Macro */
   3:../DaisyExamples/libDaisy//src/per/qspi.h **** 
   4:../DaisyExamples/libDaisy//src/per/qspi.h **** #ifndef UNIT_TEST // for unit tests, a dummy implementation
   5:../DaisyExamples/libDaisy//src/per/qspi.h **** 
   6:../DaisyExamples/libDaisy//src/per/qspi.h **** #include <cstdint>
   7:../DaisyExamples/libDaisy//src/per/qspi.h **** #include "daisy_core.h" // Added for dsy_gpio_pin typedef
   8:../DaisyExamples/libDaisy//src/per/qspi.h **** 
   9:../DaisyExamples/libDaisy//src/per/qspi.h **** #define DSY_QSPI_TEXT       \
  10:../DaisyExamples/libDaisy//src/per/qspi.h ****     __attribute__((section( \
  11:../DaisyExamples/libDaisy//src/per/qspi.h ****         ".qspiflash_text"))) /**< used for reading memory in memory_mapped mode. */
  12:../DaisyExamples/libDaisy//src/per/qspi.h **** #define DSY_QSPI_DATA       \
  13:../DaisyExamples/libDaisy//src/per/qspi.h ****     __attribute__((section( \
  14:../DaisyExamples/libDaisy//src/per/qspi.h ****         ".qspiflash_data"))) /**< used for reading memory in memory_mapped mode. */
  15:../DaisyExamples/libDaisy//src/per/qspi.h **** #define DSY_QSPI_BSS        \
  16:../DaisyExamples/libDaisy//src/per/qspi.h ****     __attribute__((section( \
  17:../DaisyExamples/libDaisy//src/per/qspi.h ****         ".qspiflash_bss"))) /**< used for reading memory in memory_mapped mode. */
  18:../DaisyExamples/libDaisy//src/per/qspi.h **** 
  19:../DaisyExamples/libDaisy//src/per/qspi.h **** namespace daisy
  20:../DaisyExamples/libDaisy//src/per/qspi.h **** {
  21:../DaisyExamples/libDaisy//src/per/qspi.h **** /** @addtogroup serial
  22:../DaisyExamples/libDaisy//src/per/qspi.h **** @{
  23:../DaisyExamples/libDaisy//src/per/qspi.h **** */
  24:../DaisyExamples/libDaisy//src/per/qspi.h **** 
  25:../DaisyExamples/libDaisy//src/per/qspi.h **** /** 
  26:../DaisyExamples/libDaisy//src/per/qspi.h ****  Driver for QSPI peripheral to interface with external flash memory. \n 
  27:../DaisyExamples/libDaisy//src/per/qspi.h ****     Currently supported QSPI Devices: \n 
  28:../DaisyExamples/libDaisy//src/per/qspi.h ****     * IS25LP080D
  29:../DaisyExamples/libDaisy//src/per/qspi.h **** */
  30:../DaisyExamples/libDaisy//src/per/qspi.h **** class QSPIHandle
  31:../DaisyExamples/libDaisy//src/per/qspi.h **** {
  32:../DaisyExamples/libDaisy//src/per/qspi.h ****   public:
  33:../DaisyExamples/libDaisy//src/per/qspi.h ****     enum Result
  34:../DaisyExamples/libDaisy//src/per/qspi.h ****     {
  35:../DaisyExamples/libDaisy//src/per/qspi.h ****         OK = 0,
  36:../DaisyExamples/libDaisy//src/per/qspi.h ****         ERR
  37:../DaisyExamples/libDaisy//src/per/qspi.h ****     };
  38:../DaisyExamples/libDaisy//src/per/qspi.h **** 
  39:../DaisyExamples/libDaisy//src/per/qspi.h ****     /** Indicates the current status of the module. 
ARM GAS  C:\Users\matth\AppData\Local\Temp\ccJdUjkk.s 			page 25


  40:../DaisyExamples/libDaisy//src/per/qspi.h ****          *  Warnings are indicated by a leading W.
  41:../DaisyExamples/libDaisy//src/per/qspi.h ****          *  Errors are indicated by a leading E and cause an immediate exit.
  42:../DaisyExamples/libDaisy//src/per/qspi.h ****          * 
  43:../DaisyExamples/libDaisy//src/per/qspi.h ****          *  \param GOOD - No errors have been reported.
  44:../DaisyExamples/libDaisy//src/per/qspi.h ****          *  \param E_HAL_ERROR - HAL code did not return HAL_OK.
  45:../DaisyExamples/libDaisy//src/per/qspi.h ****          *  \param E_SWITCHING_MODES - An error was encountered while switching QSPI peripheral mod
  46:../DaisyExamples/libDaisy//src/per/qspi.h ****          *  \param E_INVALID_MODE - QSPI should not be written to while the program is executing fr
  47:../DaisyExamples/libDaisy//src/per/qspi.h ****          */
  48:../DaisyExamples/libDaisy//src/per/qspi.h ****     enum Status
  49:../DaisyExamples/libDaisy//src/per/qspi.h ****     {
  50:../DaisyExamples/libDaisy//src/per/qspi.h ****         GOOD = 0,
  51:../DaisyExamples/libDaisy//src/per/qspi.h ****         E_HAL_ERROR,
  52:../DaisyExamples/libDaisy//src/per/qspi.h ****         E_SWITCHING_MODES,
  53:../DaisyExamples/libDaisy//src/per/qspi.h ****         E_INVALID_MODE,
  54:../DaisyExamples/libDaisy//src/per/qspi.h ****     };
  55:../DaisyExamples/libDaisy//src/per/qspi.h **** 
  56:../DaisyExamples/libDaisy//src/per/qspi.h ****     /** Configuration structure for interfacing with QSPI Driver */
  57:../DaisyExamples/libDaisy//src/per/qspi.h ****     struct Config
  58:../DaisyExamples/libDaisy//src/per/qspi.h ****     {
  59:../DaisyExamples/libDaisy//src/per/qspi.h ****         /** Flash Devices supported. (Both of these are more-or-less the same, just different sizes
  60:../DaisyExamples/libDaisy//src/per/qspi.h ****         enum Device
  61:../DaisyExamples/libDaisy//src/per/qspi.h ****         {
  62:../DaisyExamples/libDaisy//src/per/qspi.h ****             IS25LP080D,  /**< & */
  63:../DaisyExamples/libDaisy//src/per/qspi.h ****             IS25LP064A,  /**< & */
  64:../DaisyExamples/libDaisy//src/per/qspi.h ****             DEVICE_LAST, /**< & */
  65:../DaisyExamples/libDaisy//src/per/qspi.h ****         };
  66:../DaisyExamples/libDaisy//src/per/qspi.h **** 
  67:../DaisyExamples/libDaisy//src/per/qspi.h ****         /** 
  68:../DaisyExamples/libDaisy//src/per/qspi.h ****         Modes of operation.
  69:../DaisyExamples/libDaisy//src/per/qspi.h ****         Memory Mapped mode: QSPI configured so that the QSPI can be
  70:../DaisyExamples/libDaisy//src/per/qspi.h ****         read from starting address 0x90000000. Writing is not
  71:../DaisyExamples/libDaisy//src/per/qspi.h ****         possible in this mode. \n 
  72:../DaisyExamples/libDaisy//src/per/qspi.h ****         Indirect Polling mode: Device driver enabled. 
  73:../DaisyExamples/libDaisy//src/per/qspi.h ****         */
  74:../DaisyExamples/libDaisy//src/per/qspi.h ****         enum Mode
  75:../DaisyExamples/libDaisy//src/per/qspi.h ****         {
  76:../DaisyExamples/libDaisy//src/per/qspi.h ****             MEMORY_MAPPED,    /**< & */
  77:../DaisyExamples/libDaisy//src/per/qspi.h ****             INDIRECT_POLLING, /**< & */
  78:../DaisyExamples/libDaisy//src/per/qspi.h ****             MODE_LAST,
  79:../DaisyExamples/libDaisy//src/per/qspi.h ****         };
  80:../DaisyExamples/libDaisy//src/per/qspi.h **** 
  81:../DaisyExamples/libDaisy//src/per/qspi.h ****         //SCK,  CE# (active low)
  82:../DaisyExamples/libDaisy//src/per/qspi.h ****         struct
  83:../DaisyExamples/libDaisy//src/per/qspi.h ****         {
  84:../DaisyExamples/libDaisy//src/per/qspi.h ****             dsy_gpio_pin io0; /**< & */
  85:../DaisyExamples/libDaisy//src/per/qspi.h ****             dsy_gpio_pin io1; /**< & */
  86:../DaisyExamples/libDaisy//src/per/qspi.h ****             dsy_gpio_pin io2; /**< & */
  87:../DaisyExamples/libDaisy//src/per/qspi.h ****             dsy_gpio_pin io3; /**< & */
  88:../DaisyExamples/libDaisy//src/per/qspi.h ****             dsy_gpio_pin clk; /**< & */
  89:../DaisyExamples/libDaisy//src/per/qspi.h ****             dsy_gpio_pin ncs; /**< & */
  90:../DaisyExamples/libDaisy//src/per/qspi.h ****         } pin_config;
  91:../DaisyExamples/libDaisy//src/per/qspi.h **** 
  92:../DaisyExamples/libDaisy//src/per/qspi.h ****         Device device;
  93:../DaisyExamples/libDaisy//src/per/qspi.h ****         Mode   mode;
  94:../DaisyExamples/libDaisy//src/per/qspi.h ****     };
  95:../DaisyExamples/libDaisy//src/per/qspi.h **** 
  96:../DaisyExamples/libDaisy//src/per/qspi.h ****     /** 
ARM GAS  C:\Users\matth\AppData\Local\Temp\ccJdUjkk.s 			page 26


  97:../DaisyExamples/libDaisy//src/per/qspi.h ****         Initializes QSPI peripheral, and Resets, and prepares memory for access.
  98:../DaisyExamples/libDaisy//src/per/qspi.h ****         \param config should be populated with the mode, device and pin_config before calling this 
  99:../DaisyExamples/libDaisy//src/per/qspi.h ****         \return Result::OK or Result::ERR
 100:../DaisyExamples/libDaisy//src/per/qspi.h ****         */
 101:../DaisyExamples/libDaisy//src/per/qspi.h ****     Result Init(const Config& config);
 102:../DaisyExamples/libDaisy//src/per/qspi.h **** 
 103:../DaisyExamples/libDaisy//src/per/qspi.h ****     /** Returns the current config. */
 104:../DaisyExamples/libDaisy//src/per/qspi.h ****     const Config& GetConfig() const;
 105:../DaisyExamples/libDaisy//src/per/qspi.h **** 
 106:../DaisyExamples/libDaisy//src/per/qspi.h ****     // Couldn't this just be called before anything else in init? That
 107:../DaisyExamples/libDaisy//src/per/qspi.h ****     // would make manually calling it unnecessary.
 108:../DaisyExamples/libDaisy//src/per/qspi.h ****     /** 
 109:../DaisyExamples/libDaisy//src/per/qspi.h ****         Deinitializes the peripheral
 110:../DaisyExamples/libDaisy//src/per/qspi.h ****         This should be called before reinitializing QSPI in a different mode.
 111:../DaisyExamples/libDaisy//src/per/qspi.h ****         \return Result::OK or Result::ERR
 112:../DaisyExamples/libDaisy//src/per/qspi.h ****         */
 113:../DaisyExamples/libDaisy//src/per/qspi.h ****     Result DeInit();
 114:../DaisyExamples/libDaisy//src/per/qspi.h **** 
 115:../DaisyExamples/libDaisy//src/per/qspi.h ****     /** 
 116:../DaisyExamples/libDaisy//src/per/qspi.h ****         Writes a single page to to the specified address on the QSPI chip.
 117:../DaisyExamples/libDaisy//src/per/qspi.h ****         For IS25LP*, page size is 256 bytes.
 118:../DaisyExamples/libDaisy//src/per/qspi.h ****         \param address Address to write to
 119:../DaisyExamples/libDaisy//src/per/qspi.h ****         \param size Buffer size
 120:../DaisyExamples/libDaisy//src/per/qspi.h ****         \param buffer Buffer to write
 121:../DaisyExamples/libDaisy//src/per/qspi.h ****         \return Result::OK or Result::ERR
 122:../DaisyExamples/libDaisy//src/per/qspi.h ****         */
 123:../DaisyExamples/libDaisy//src/per/qspi.h ****     Result WritePage(uint32_t address, uint32_t size, uint8_t* buffer);
 124:../DaisyExamples/libDaisy//src/per/qspi.h **** 
 125:../DaisyExamples/libDaisy//src/per/qspi.h ****     /** 
 126:../DaisyExamples/libDaisy//src/per/qspi.h ****         Writes data in buffer to to the QSPI. Starting at address to address+size 
 127:../DaisyExamples/libDaisy//src/per/qspi.h ****         \param address Address to write to
 128:../DaisyExamples/libDaisy//src/per/qspi.h ****         \param size Buffer size
 129:../DaisyExamples/libDaisy//src/per/qspi.h ****         \param buffer Buffer to write
 130:../DaisyExamples/libDaisy//src/per/qspi.h ****         \return Result::OK or Result::ERR
 131:../DaisyExamples/libDaisy//src/per/qspi.h ****         */
 132:../DaisyExamples/libDaisy//src/per/qspi.h ****     Result Write(uint32_t address, uint32_t size, uint8_t* buffer);
 133:../DaisyExamples/libDaisy//src/per/qspi.h **** 
 134:../DaisyExamples/libDaisy//src/per/qspi.h ****     /** 
 135:../DaisyExamples/libDaisy//src/per/qspi.h ****         Erases the area specified on the chip.
 136:../DaisyExamples/libDaisy//src/per/qspi.h ****         Erasures will happen by 4K, 32K or 64K increments.
 137:../DaisyExamples/libDaisy//src/per/qspi.h ****         Smallest erase possible is 4kB at a time. (on IS25LP*)
 138:../DaisyExamples/libDaisy//src/per/qspi.h ****         \param start_addr Address to begin erasing from
 139:../DaisyExamples/libDaisy//src/per/qspi.h ****         \param end_addr  Address to stop erasing at
 140:../DaisyExamples/libDaisy//src/per/qspi.h ****         \return Result::OK or Result::ERR
 141:../DaisyExamples/libDaisy//src/per/qspi.h ****         */
 142:../DaisyExamples/libDaisy//src/per/qspi.h ****     Result Erase(uint32_t start_addr, uint32_t end_addr);
 143:../DaisyExamples/libDaisy//src/per/qspi.h **** 
 144:../DaisyExamples/libDaisy//src/per/qspi.h ****     /**  
 145:../DaisyExamples/libDaisy//src/per/qspi.h ****          Erases a single sector of the chip.  
 146:../DaisyExamples/libDaisy//src/per/qspi.h ****         TODO: Document the size of this function. 
 147:../DaisyExamples/libDaisy//src/per/qspi.h ****         \param address Address of sector to erase
 148:../DaisyExamples/libDaisy//src/per/qspi.h ****         \return Result::OK or Result::ERR
 149:../DaisyExamples/libDaisy//src/per/qspi.h ****         */
 150:../DaisyExamples/libDaisy//src/per/qspi.h ****     Result EraseSector(uint32_t address);
 151:../DaisyExamples/libDaisy//src/per/qspi.h **** 
 152:../DaisyExamples/libDaisy//src/per/qspi.h ****     /** Returns the current class status. Useful for debugging.
 153:../DaisyExamples/libDaisy//src/per/qspi.h ****      *  \returns Status
ARM GAS  C:\Users\matth\AppData\Local\Temp\ccJdUjkk.s 			page 27


 154:../DaisyExamples/libDaisy//src/per/qspi.h ****      */
 155:../DaisyExamples/libDaisy//src/per/qspi.h ****     Status GetStatus();
 156:../DaisyExamples/libDaisy//src/per/qspi.h **** 
 157:../DaisyExamples/libDaisy//src/per/qspi.h ****     /** Returns a pointer to the actual memory used 
 158:../DaisyExamples/libDaisy//src/per/qspi.h ****      *  The memory at this address is read-only
 159:../DaisyExamples/libDaisy//src/per/qspi.h ****      *  to write to it use the Write function.
 160:../DaisyExamples/libDaisy//src/per/qspi.h ****      * 
 161:../DaisyExamples/libDaisy//src/per/qspi.h ****      *  \param offset returns the pointer starting this 
 162:../DaisyExamples/libDaisy//src/per/qspi.h ****      *                many bytes into the memory
 163:../DaisyExamples/libDaisy//src/per/qspi.h ****     */
 164:../DaisyExamples/libDaisy//src/per/qspi.h ****     void* GetData(uint32_t offset = 0);
 165:../DaisyExamples/libDaisy//src/per/qspi.h **** 
 166:../DaisyExamples/libDaisy//src/per/qspi.h ****     QSPIHandle() : pimpl_(nullptr) {}
 511              		.loc 9 166 34 view .LVU131
 512 000e 0C48     		ldr	r0, .L33+16
 513 0010 0023     		movs	r3, #0
 514              	.LBE143:
 515              	.LBE142:
 516              	.LBE141:
 517              	.LBE140:
 518              	.LBE139:
  29:patching1.cpp **** dsy_gpio_pin outputChainPins[3] = {D1,D2,D7};
 519              		.loc 7 29 44 view .LVU132
 520 0012 0C49     		ldr	r1, .L33+20
 521 0014 40F6062C 		movw	ip, #2566
  38:patching1.cpp **** DaisySeed hw;
 522              		.loc 7 38 11 view .LVU133
 523 0018 054A     		ldr	r2, .L33
  29:patching1.cpp **** dsy_gpio_pin outputChainPins[3] = {D1,D2,D7};
 524              		.loc 7 29 44 view .LVU134
 525 001a 2160     		str	r1, [r4]
 526 001c A4F804C0 		strh	ip, [r4, #4]	@ movhi
 527              	.LVL33:
 528              	.LBB161:
 529              	.LBI139:
  21:../DaisyExamples/libDaisy//src/daisy_seed.h ****     ~DaisySeed() {}
 530              		.loc 2 21 5 is_stmt 1 view .LVU135
 531              	.LBB159:
 532              	.LBB146:
 533              	.LBI141:
 534              		.loc 9 166 5 view .LVU136
 535              		.loc 9 166 5 is_stmt 0 view .LVU137
 536              	.LBE146:
 537              	.LBB147:
 538              	.LBI147:
  95:../DaisyExamples/libDaisy//src/hid/audio.h ****     ~AudioHandle() {}
 539              		.loc 6 95 5 is_stmt 1 view .LVU138
  95:../DaisyExamples/libDaisy//src/hid/audio.h ****     ~AudioHandle() {}
 540              		.loc 6 95 5 is_stmt 0 view .LVU139
 541              	.LBE147:
 542              	.LBB150:
 543              	.LBI150:
  92:../DaisyExamples/libDaisy//src/per/adc.h ****     ~AdcHandle() {}
 544              		.loc 5 92 5 is_stmt 1 view .LVU140
  92:../DaisyExamples/libDaisy//src/per/adc.h ****     ~AdcHandle() {}
 545              		.loc 5 92 5 is_stmt 0 view .LVU141
 546              	.LBE150:
ARM GAS  C:\Users\matth\AppData\Local\Temp\ccJdUjkk.s 			page 28


 547              	.LBB151:
 548              	.LBI151:
 549              		.file 10 "../DaisyExamples/libDaisy//src/per/dac.h"
   1:../DaisyExamples/libDaisy//src/per/dac.h **** #pragma once
   2:../DaisyExamples/libDaisy//src/per/dac.h **** #ifndef DSY_DAC_H
   3:../DaisyExamples/libDaisy//src/per/dac.h **** #define DSY_DAC_H
   4:../DaisyExamples/libDaisy//src/per/dac.h **** 
   5:../DaisyExamples/libDaisy//src/per/dac.h **** #include "daisy_core.h"
   6:../DaisyExamples/libDaisy//src/per/dac.h **** 
   7:../DaisyExamples/libDaisy//src/per/dac.h **** namespace daisy
   8:../DaisyExamples/libDaisy//src/per/dac.h **** {
   9:../DaisyExamples/libDaisy//src/per/dac.h **** /** @brief DAC handle for Built-in DAC Peripheral 
  10:../DaisyExamples/libDaisy//src/per/dac.h ****  *  @ingroup per_analog
  11:../DaisyExamples/libDaisy//src/per/dac.h ****  ** 
  12:../DaisyExamples/libDaisy//src/per/dac.h ****  ** For now only Normal Mode is supported,
  13:../DaisyExamples/libDaisy//src/per/dac.h ****  ** Sample and hold mode provides reduced power consumption, but requires a bit more setup.
  14:../DaisyExamples/libDaisy//src/per/dac.h ****  **
  15:../DaisyExamples/libDaisy//src/per/dac.h ****  ** For now connecting the DAC through other internal peripherals is also not supported.
  16:../DaisyExamples/libDaisy//src/per/dac.h ****  **
  17:../DaisyExamples/libDaisy//src/per/dac.h ****  ** Since the DAC channels have dedicated pins we don't need to pass in a pin config like with
  18:../DaisyExamples/libDaisy//src/per/dac.h ****  ** other modules. However, it is still important to not try to use the DAC pins for anything else.
  19:../DaisyExamples/libDaisy//src/per/dac.h ****  ** DAC Channel 1 is on PA4, and DAC Channel 2 is on PA5
  20:../DaisyExamples/libDaisy//src/per/dac.h ****  ***/
  21:../DaisyExamples/libDaisy//src/per/dac.h **** class DacHandle
  22:../DaisyExamples/libDaisy//src/per/dac.h **** {
  23:../DaisyExamples/libDaisy//src/per/dac.h ****   public:
  24:../DaisyExamples/libDaisy//src/per/dac.h ****     /** Return Values for the DacHandle class */
  25:../DaisyExamples/libDaisy//src/per/dac.h ****     enum class Result
  26:../DaisyExamples/libDaisy//src/per/dac.h ****     {
  27:../DaisyExamples/libDaisy//src/per/dac.h ****         OK,
  28:../DaisyExamples/libDaisy//src/per/dac.h ****         ERR,
  29:../DaisyExamples/libDaisy//src/per/dac.h ****     };
  30:../DaisyExamples/libDaisy//src/per/dac.h **** 
  31:../DaisyExamples/libDaisy//src/per/dac.h ****     /** Selects which channel(s) will be configured for use. */
  32:../DaisyExamples/libDaisy//src/per/dac.h ****     enum class Channel
  33:../DaisyExamples/libDaisy//src/per/dac.h ****     {
  34:../DaisyExamples/libDaisy//src/per/dac.h ****         ONE,
  35:../DaisyExamples/libDaisy//src/per/dac.h ****         TWO,
  36:../DaisyExamples/libDaisy//src/per/dac.h ****         BOTH,
  37:../DaisyExamples/libDaisy//src/per/dac.h ****     };
  38:../DaisyExamples/libDaisy//src/per/dac.h **** 
  39:../DaisyExamples/libDaisy//src/per/dac.h ****     /** Sets the Mode for the DAC channels.
  40:../DaisyExamples/libDaisy//src/per/dac.h ****      **
  41:../DaisyExamples/libDaisy//src/per/dac.h ****      ** Polling mode uses the blocking mode to transmit a single value at a time.
  42:../DaisyExamples/libDaisy//src/per/dac.h ****      **
  43:../DaisyExamples/libDaisy//src/per/dac.h ****      ** DMA mode uses a buffer, and periodically transmits it triggering a 
  44:../DaisyExamples/libDaisy//src/per/dac.h ****      ** callback to fill the buffer when it is ready for more samples.
  45:../DaisyExamples/libDaisy//src/per/dac.h ****      ***/
  46:../DaisyExamples/libDaisy//src/per/dac.h ****     enum class Mode
  47:../DaisyExamples/libDaisy//src/per/dac.h ****     {
  48:../DaisyExamples/libDaisy//src/per/dac.h ****         POLLING,
  49:../DaisyExamples/libDaisy//src/per/dac.h ****         DMA,
  50:../DaisyExamples/libDaisy//src/per/dac.h ****     };
  51:../DaisyExamples/libDaisy//src/per/dac.h **** 
  52:../DaisyExamples/libDaisy//src/per/dac.h ****     /** Sets the number of bits per sample transmitted out of the DAC.
  53:../DaisyExamples/libDaisy//src/per/dac.h ****      ** The output range will be: 0V - VDDA
  54:../DaisyExamples/libDaisy//src/per/dac.h ****      ** The resolution will be roughly: bitdepth / (VDDA - 0V) 
ARM GAS  C:\Users\matth\AppData\Local\Temp\ccJdUjkk.s 			page 29


  55:../DaisyExamples/libDaisy//src/per/dac.h ****      ***/
  56:../DaisyExamples/libDaisy//src/per/dac.h ****     enum class BitDepth
  57:../DaisyExamples/libDaisy//src/per/dac.h ****     {
  58:../DaisyExamples/libDaisy//src/per/dac.h ****         BITS_8,
  59:../DaisyExamples/libDaisy//src/per/dac.h ****         BITS_12
  60:../DaisyExamples/libDaisy//src/per/dac.h ****     };
  61:../DaisyExamples/libDaisy//src/per/dac.h **** 
  62:../DaisyExamples/libDaisy//src/per/dac.h ****     /** Sets whether the DAC output is buffered for higher drive ability. */
  63:../DaisyExamples/libDaisy//src/per/dac.h ****     enum class BufferState
  64:../DaisyExamples/libDaisy//src/per/dac.h ****     {
  65:../DaisyExamples/libDaisy//src/per/dac.h ****         ENABLED,
  66:../DaisyExamples/libDaisy//src/per/dac.h ****         DISABLED,
  67:../DaisyExamples/libDaisy//src/per/dac.h ****     };
  68:../DaisyExamples/libDaisy//src/per/dac.h **** 
  69:../DaisyExamples/libDaisy//src/per/dac.h ****     /** Configuration structure for initializing the DAC structure. */
  70:../DaisyExamples/libDaisy//src/per/dac.h ****     struct Config
  71:../DaisyExamples/libDaisy//src/per/dac.h ****     {
  72:../DaisyExamples/libDaisy//src/per/dac.h ****         /** Target Samplerate in Hz used to configure the internal 
  73:../DaisyExamples/libDaisy//src/per/dac.h ****          ** timebase for DMA mode. Does nothing in POLLING mode.
  74:../DaisyExamples/libDaisy//src/per/dac.h ****          ** If the value is 0 at Init time this will default to 48000Hz 
  75:../DaisyExamples/libDaisy//src/per/dac.h ****          ** otherwise the driver will attempt meet the target.*/
  76:../DaisyExamples/libDaisy//src/per/dac.h ****         uint32_t target_samplerate;
  77:../DaisyExamples/libDaisy//src/per/dac.h **** 
  78:../DaisyExamples/libDaisy//src/per/dac.h ****         Channel     chn;
  79:../DaisyExamples/libDaisy//src/per/dac.h ****         Mode        mode;
  80:../DaisyExamples/libDaisy//src/per/dac.h ****         BitDepth    bitdepth;
  81:../DaisyExamples/libDaisy//src/per/dac.h ****         BufferState buff_state;
  82:../DaisyExamples/libDaisy//src/per/dac.h ****     };
  83:../DaisyExamples/libDaisy//src/per/dac.h **** 
  84:../DaisyExamples/libDaisy//src/per/dac.h ****     DacHandle() : pimpl_(nullptr) {}
 550              		.loc 10 84 5 is_stmt 1 view .LVU142
 551              		.loc 10 84 5 is_stmt 0 view .LVU143
 552              	.LBE151:
 553              	.LBB154:
 554              	.LBI154:
  40:../DaisyExamples/libDaisy//src/hid/usb.h **** 
 555              		.loc 4 40 5 is_stmt 1 view .LVU144
  40:../DaisyExamples/libDaisy//src/hid/usb.h **** 
 556              		.loc 4 40 5 is_stmt 0 view .LVU145
 557              	.LBE154:
 558              	.LBB155:
 559              	.LBI155:
  77:../DaisyExamples/libDaisy//src/sys/system.h ****     ~System() {}
 560              		.loc 3 77 5 is_stmt 1 view .LVU146
  77:../DaisyExamples/libDaisy//src/sys/system.h ****     ~System() {}
 561              		.loc 3 77 5 is_stmt 0 view .LVU147
 562              	.LBE155:
 563              	.LBE159:
 564              	.LBE161:
  38:patching1.cpp **** DaisySeed hw;
 565              		.loc 7 38 11 view .LVU148
 566 0020 0949     		ldr	r1, .L33+24
 567              	.LBB162:
 568              	.LBB160:
 569              	.LBB156:
 570              	.LBB145:
 571              	.LBB144:
ARM GAS  C:\Users\matth\AppData\Local\Temp\ccJdUjkk.s 			page 30


 572              		.loc 9 166 34 view .LVU149
 573 0022 0360     		str	r3, [r0]
 574              	.LBE144:
 575              	.LBE145:
 576              	.LBE156:
 577              	.LBB157:
 578              	.LBB148:
 579              	.LBB149:
  95:../DaisyExamples/libDaisy//src/hid/audio.h ****     ~AudioHandle() {}
 580              		.loc 6 95 35 view .LVU150
 581 0024 4361     		str	r3, [r0, #20]
 582              	.LBE149:
 583              	.LBE148:
 584              	.LBE157:
 585              	.LBB158:
 586              	.LBB152:
 587              	.LBB153:
 588              		.loc 10 84 33 view .LVU151
 589 0026 0362     		str	r3, [r0, #32]
 590              	.LBE153:
 591              	.LBE152:
 592              	.LBE158:
 593              	.LBE160:
 594              	.LBE162:
 595              	.LBE164:
 596              	.LBE167:
 597              		.loc 7 106 1 view .LVU152
 598 0028 BDE81040 		pop	{r4, lr}
 599              		.cfi_restore 14
 600              		.cfi_restore 4
 601              		.cfi_def_cfa_offset 0
 602              	.LBB168:
 603              	.LBB165:
  38:patching1.cpp **** DaisySeed hw;
 604              		.loc 7 38 11 view .LVU153
 605 002c FFF7FEBF 		b	__aeabi_atexit
 606              	.LVL34:
 607              	.L34:
 608              		.align	2
 609              	.L33:
 610 0030 00000000 		.word	__dso_handle
 611 0034 00000000 		.word	_ZN16ShiftRegister595D1Ev
 612 0038 00000000 		.word	.LANCHOR3
 613 003c 00000000 		.word	.LANCHOR2
 614 0040 00000000 		.word	.LANCHOR0
 615 0044 020B020A 		.word	167906050
 616 0048 00000000 		.word	_ZN5daisy9DaisySeedD1Ev
 617              	.LBE165:
 618              	.LBE168:
 619              		.cfi_endproc
 620              	.LFE5340:
 622              		.section	.init_array,"aw",%init_array
 623              		.align	2
 624 0000 00000000 		.word	_GLOBAL__sub_I_patchingInputValues(target1)
 625              		.global	hw
 626              		.global	potValues
 627              		.global	analogInputs
ARM GAS  C:\Users\matth\AppData\Local\Temp\ccJdUjkk.s 			page 31


 628              		.global	outputChainPins
 629              		.global	outputChain
 630              		.global	numInputRegisters
 631              		.global	numOutputRegisters
 632              		.global	ledStates
 633              		.global	patchingInputValues
 634              		.section	.bss.analogInputs,"aw",%nobits
 635              		.align	2
 636              		.set	.LANCHOR4,. + 0
 639              	analogInputs:
 640 0000 00000000 		.space	34
 640      00000000 
 640      00000000 
 640      00000000 
 640      00000000 
 641              		.section	.bss.hw,"aw",%nobits
 642              		.align	2
 643              		.set	.LANCHOR0,. + 0
 646              	hw:
 647 0000 00000000 		.space	60
 647      00000000 
 647      00000000 
 647      00000000 
 647      00000000 
 648              		.section	.bss.ledStates,"aw",%nobits
 649              		.align	2
 652              	ledStates:
 653 0000 00000000 		.space	5
 653      00
 654              		.section	.bss.outputChain,"aw",%nobits
 655              		.align	2
 656              		.set	.LANCHOR3,. + 0
 659              	outputChain:
 660 0000 00000000 		.space	32
 660      00000000 
 660      00000000 
 660      00000000 
 660      00000000 
 661              		.section	.bss.outputChainPins,"aw",%nobits
 662              		.align	2
 663              		.set	.LANCHOR2,. + 0
 666              	outputChainPins:
 667 0000 00000000 		.space	6
 667      0000
 668              		.section	.bss.patchingInputValues,"aw",%nobits
 669              		.align	2
 672              	patchingInputValues:
 673 0000 00000000 		.space	32
 673      00000000 
 673      00000000 
 673      00000000 
 673      00000000 
 674              		.section	.bss.potValues,"aw",%nobits
 675              		.align	2
 676              		.set	.LANCHOR5,. + 0
 679              	potValues:
 680 0000 00000000 		.space	64
ARM GAS  C:\Users\matth\AppData\Local\Temp\ccJdUjkk.s 			page 32


 680      00000000 
 680      00000000 
 680      00000000 
 680      00000000 
 681              		.section	.data.numInputRegisters,"aw"
 682              		.align	2
 685              	numInputRegisters:
 686 0000 04000000 		.word	4
 687              		.section	.data.numOutputRegisters,"aw"
 688              		.align	2
 689              		.set	.LANCHOR1,. + 0
 692              	numOutputRegisters:
 693 0000 04000000 		.word	4
 694              		.text
 695              	.Letext0:
 696              		.file 11 "c:\\users\\matth\\documents\\daisytoolchain-0.3.3\\daisytoolchain-0.3.3\\windows\\arm-no
 697              		.file 12 "c:\\users\\matth\\documents\\daisytoolchain-0.3.3\\daisytoolchain-0.3.3\\windows\\arm-no
 698              		.file 13 "c:\\users\\matth\\documents\\daisytoolchain-0.3.3\\daisytoolchain-0.3.3\\windows\\arm-no
 699              		.file 14 "c:\\users\\matth\\documents\\daisytoolchain-0.3.3\\daisytoolchain-0.3.3\\windows\\lib\\g
 700              		.file 15 "c:\\users\\matth\\documents\\daisytoolchain-0.3.3\\daisytoolchain-0.3.3\\windows\\arm-no
 701              		.file 16 "c:\\users\\matth\\documents\\daisytoolchain-0.3.3\\daisytoolchain-0.3.3\\windows\\arm-no
 702              		.file 17 "c:\\users\\matth\\documents\\daisytoolchain-0.3.3\\daisytoolchain-0.3.3\\windows\\arm-no
 703              		.file 18 "c:\\users\\matth\\documents\\daisytoolchain-0.3.3\\daisytoolchain-0.3.3\\windows\\arm-no
 704              		.file 19 "c:\\users\\matth\\documents\\daisytoolchain-0.3.3\\daisytoolchain-0.3.3\\windows\\arm-no
 705              		.file 20 "c:\\users\\matth\\documents\\daisytoolchain-0.3.3\\daisytoolchain-0.3.3\\windows\\arm-no
 706              		.file 21 "c:\\users\\matth\\documents\\daisytoolchain-0.3.3\\daisytoolchain-0.3.3\\windows\\arm-no
 707              		.file 22 "c:\\users\\matth\\documents\\daisytoolchain-0.3.3\\daisytoolchain-0.3.3\\windows\\arm-no
 708              		.file 23 "c:\\users\\matth\\documents\\daisytoolchain-0.3.3\\daisytoolchain-0.3.3\\windows\\arm-no
 709              		.file 24 "c:\\users\\matth\\documents\\daisytoolchain-0.3.3\\daisytoolchain-0.3.3\\windows\\arm-no
 710              		.file 25 "c:\\users\\matth\\documents\\daisytoolchain-0.3.3\\daisytoolchain-0.3.3\\windows\\arm-no
 711              		.file 26 "c:\\users\\matth\\documents\\daisytoolchain-0.3.3\\daisytoolchain-0.3.3\\windows\\arm-no
 712              		.file 27 "c:\\users\\matth\\documents\\daisytoolchain-0.3.3\\daisytoolchain-0.3.3\\windows\\arm-no
 713              		.file 28 "c:\\users\\matth\\documents\\daisytoolchain-0.3.3\\daisytoolchain-0.3.3\\windows\\arm-no
 714              		.file 29 "c:\\users\\matth\\documents\\daisytoolchain-0.3.3\\daisytoolchain-0.3.3\\windows\\arm-no
 715              		.file 30 "c:\\users\\matth\\documents\\daisytoolchain-0.3.3\\daisytoolchain-0.3.3\\windows\\arm-no
 716              		.file 31 "c:\\users\\matth\\documents\\daisytoolchain-0.3.3\\daisytoolchain-0.3.3\\windows\\arm-no
 717              		.file 32 "c:\\users\\matth\\documents\\daisytoolchain-0.3.3\\daisytoolchain-0.3.3\\windows\\arm-no
 718              		.file 33 "c:\\users\\matth\\documents\\daisytoolchain-0.3.3\\daisytoolchain-0.3.3\\windows\\arm-no
 719              		.file 34 "c:\\users\\matth\\documents\\daisytoolchain-0.3.3\\daisytoolchain-0.3.3\\windows\\arm-no
 720              		.file 35 "c:\\users\\matth\\documents\\daisytoolchain-0.3.3\\daisytoolchain-0.3.3\\windows\\arm-no
 721              		.file 36 "c:\\users\\matth\\documents\\daisytoolchain-0.3.3\\daisytoolchain-0.3.3\\windows\\arm-no
 722              		.file 37 "c:\\users\\matth\\documents\\daisytoolchain-0.3.3\\daisytoolchain-0.3.3\\windows\\arm-no
 723              		.file 38 "c:\\users\\matth\\documents\\daisytoolchain-0.3.3\\daisytoolchain-0.3.3\\windows\\arm-no
 724              		.file 39 "c:\\users\\matth\\documents\\daisytoolchain-0.3.3\\daisytoolchain-0.3.3\\windows\\arm-no
 725              		.file 40 "../DaisyExamples/libDaisy//src/per/tim.h"
 726              		.file 41 "../DaisyExamples/libDaisy//src/per/sai.h"
 727              		.file 42 "../DaisyExamples/libDaisy//src/util/wav_format.h"
 728              		.file 43 "../DaisyExamples/libDaisy//src/dev/max11300.h"
 729              		.file 44 "../DaisyExamples/libDaisy//src/per/gpio.h"
 730              		.file 45 "../DaisyExamples/libDaisy//src/dev/sdram.h"
 731              		.file 46 "c:\\users\\matth\\documents\\daisytoolchain-0.3.3\\daisytoolchain-0.3.3\\windows\\lib\\g
 732              		.file 47 "c:\\users\\matth\\documents\\daisytoolchain-0.3.3\\daisytoolchain-0.3.3\\windows\\arm-no
 733              		.file 48 "c:\\users\\matth\\documents\\daisytoolchain-0.3.3\\daisytoolchain-0.3.3\\windows\\arm-no
 734              		.file 49 "../DaisyExamples/DaisySP//Source/Control/adenv.h"
 735              		.file 50 "../DaisyExamples/DaisySP//Source/Utility/dsp.h"
 736              		.file 51 "c:\\users\\matth\\documents\\daisytoolchain-0.3.3\\daisytoolchain-0.3.3\\windows\\arm-no
 737              		.file 52 "c:\\users\\matth\\documents\\daisytoolchain-0.3.3\\daisytoolchain-0.3.3\\windows\\arm-no
ARM GAS  C:\Users\matth\AppData\Local\Temp\ccJdUjkk.s 			page 33


 738              		.file 53 "<built-in>"
ARM GAS  C:\Users\matth\AppData\Local\Temp\ccJdUjkk.s 			page 34


DEFINED SYMBOLS
                            *ABS*:00000000 patching1.cpp
C:\Users\matth\AppData\Local\Temp\ccJdUjkk.s:17     .text._ZN16ShiftRegister595D2Ev:00000000 $t
C:\Users\matth\AppData\Local\Temp\ccJdUjkk.s:26     .text._ZN16ShiftRegister595D2Ev:00000000 _ZN16ShiftRegister595D2Ev
C:\Users\matth\AppData\Local\Temp\ccJdUjkk.s:26     .text._ZN16ShiftRegister595D2Ev:00000000 _ZN16ShiftRegister595D1Ev
C:\Users\matth\AppData\Local\Temp\ccJdUjkk.s:43     .text._ZN5daisy9DaisySeedD2Ev:00000000 $t
C:\Users\matth\AppData\Local\Temp\ccJdUjkk.s:51     .text._ZN5daisy9DaisySeedD2Ev:00000000 _ZN5daisy9DaisySeedD2Ev
C:\Users\matth\AppData\Local\Temp\ccJdUjkk.s:51     .text._ZN5daisy9DaisySeedD2Ev:00000000 _ZN5daisy9DaisySeedD1Ev
C:\Users\matth\AppData\Local\Temp\ccJdUjkk.s:92     .text._Z13AudioCallbackPKPKfPPfj:00000000 $t
C:\Users\matth\AppData\Local\Temp\ccJdUjkk.s:100    .text._Z13AudioCallbackPKPKfPPfj:00000000 _Z13AudioCallbackPKPKfPPfj
C:\Users\matth\AppData\Local\Temp\ccJdUjkk.s:197    .text.startup.main:00000000 $t
C:\Users\matth\AppData\Local\Temp\ccJdUjkk.s:205    .text.startup.main:00000000 main
C:\Users\matth\AppData\Local\Temp\ccJdUjkk.s:432    .text.startup.main:000000c4 $d
C:\Users\matth\AppData\Local\Temp\ccJdUjkk.s:445    .text.startup._GLOBAL__sub_I_patchingInputValues:00000000 $t
C:\Users\matth\AppData\Local\Temp\ccJdUjkk.s:452    .text.startup._GLOBAL__sub_I_patchingInputValues:00000000 _GLOBAL__sub_I_patchingInputValues
C:\Users\matth\AppData\Local\Temp\ccJdUjkk.s:610    .text.startup._GLOBAL__sub_I_patchingInputValues:00000030 $d
C:\Users\matth\AppData\Local\Temp\ccJdUjkk.s:623    .init_array:00000000 $d
C:\Users\matth\AppData\Local\Temp\ccJdUjkk.s:646    .bss.hw:00000000 hw
C:\Users\matth\AppData\Local\Temp\ccJdUjkk.s:679    .bss.potValues:00000000 potValues
C:\Users\matth\AppData\Local\Temp\ccJdUjkk.s:639    .bss.analogInputs:00000000 analogInputs
C:\Users\matth\AppData\Local\Temp\ccJdUjkk.s:666    .bss.outputChainPins:00000000 outputChainPins
C:\Users\matth\AppData\Local\Temp\ccJdUjkk.s:659    .bss.outputChain:00000000 outputChain
C:\Users\matth\AppData\Local\Temp\ccJdUjkk.s:685    .data.numInputRegisters:00000000 numInputRegisters
C:\Users\matth\AppData\Local\Temp\ccJdUjkk.s:692    .data.numOutputRegisters:00000000 numOutputRegisters
C:\Users\matth\AppData\Local\Temp\ccJdUjkk.s:652    .bss.ledStates:00000000 ledStates
C:\Users\matth\AppData\Local\Temp\ccJdUjkk.s:672    .bss.patchingInputValues:00000000 patchingInputValues
C:\Users\matth\AppData\Local\Temp\ccJdUjkk.s:635    .bss.analogInputs:00000000 $d
C:\Users\matth\AppData\Local\Temp\ccJdUjkk.s:642    .bss.hw:00000000 $d
C:\Users\matth\AppData\Local\Temp\ccJdUjkk.s:649    .bss.ledStates:00000000 $d
C:\Users\matth\AppData\Local\Temp\ccJdUjkk.s:655    .bss.outputChain:00000000 $d
C:\Users\matth\AppData\Local\Temp\ccJdUjkk.s:662    .bss.outputChainPins:00000000 $d
C:\Users\matth\AppData\Local\Temp\ccJdUjkk.s:669    .bss.patchingInputValues:00000000 $d
C:\Users\matth\AppData\Local\Temp\ccJdUjkk.s:675    .bss.potValues:00000000 $d
C:\Users\matth\AppData\Local\Temp\ccJdUjkk.s:682    .data.numInputRegisters:00000000 $d
C:\Users\matth\AppData\Local\Temp\ccJdUjkk.s:688    .data.numOutputRegisters:00000000 $d
                           .group:00000000 _ZN16ShiftRegister595D5Ev
                           .group:00000000 _ZN5daisy9DaisySeedD5Ev

UNDEFINED SYMBOLS
memset
_ZN5daisy9DaisySeed4InitEb
_ZN5daisy9DaisySeed17SetAudioBlockSizeEj
_ZN5daisy9DaisySeed18SetAudioSampleRateENS_9SaiHandle6Config10SampleRateE
_ZN16ShiftRegister5954InitEP12dsy_gpio_pinj
_ZN5daisy16AdcChannelConfig10InitSingleE12dsy_gpio_pin
_ZN5daisy9AdcHandle4InitEPNS_16AdcChannelConfigEjNS0_12OverSamplingE
_ZN16ShiftRegister5953SetEhb
_ZN16ShiftRegister5955WriteEv
_ZNK5daisy9AdcHandle8GetFloatEh
__aeabi_atexit
__dso_handle
