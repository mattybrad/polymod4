Have now got a working system, in mono at least.
A few next steps:
        Tidy up the source code, making it nicer to define sockets/modules
        Better pseudo connection system
    Also make pot definitions part of same slickening process
        InVal and OutVal might be unnecessary, could just use Val?
        Centralise sample rate, don't just hardcode 48000 each time
    Add some error catching stuff to prevent compilation of bad configurations
        Add logical pin ordering (0 at top, 31 at bottom)
    Optimise delays - system tick stuff is blocking? and delayMS is too coarse (callback system?)
    Smooth analog controls (sounds too "steppy")
        Add LFO module to help test filters etc
        Add polyphony (!!!)
    Add RPS module
    Add CPU monitoring
    Stress-test the code
    Fade in connections
        Fix bug where MIDI triggers on note off rather than note on sometimes
        Add better MIDI note handling, note off, note timestamps, etc
    Why does whole thing crash when filter receives LFO signal?!
    Values should default to zero (or some defined value) when not connected
    Bit crusher is doing something weird where it somehow removes polyphony from signal chain?!
    Plan/write patch save system (QSPI? SD? External EEPROM?)
    Try setting up some nice patches, e.g. krell, filtered noise
    Think of some cool poly-specific modules, e.g. harmoniser